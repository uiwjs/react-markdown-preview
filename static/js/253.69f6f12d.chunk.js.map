{"version":3,"file":"static/js/253.69f6f12d.chunk.js","mappings":"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","sources":["../../node_modules/mermaid/dist/infoDiagram-f8f76790.js"],"sourcesContent":["import { l as log, A as selectSvgElement, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"d3\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [6, 9, 10];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"info\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"statement\": 8, \"NL\": 9, \"showInfo\": 10, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"info\", 6: \"EOF\", 9: \"NL\", 10: \"showInfo\" },\n    productions_: [0, [3, 3], [5, 0], [5, 2], [7, 1], [7, 1], [8, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      $$.length - 1;\n      switch (yystate) {\n        case 1:\n          return yy;\n        case 4:\n          break;\n        case 6:\n          yy.setInfo(true);\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: 6, 9: [1, 7], 10: [1, 8] }, { 1: [2, 1] }, o($V0, [2, 3]), o($V0, [2, 4]), o($V0, [2, 5]), o($V0, [2, 6])],\n    defaultActions: { 4: [2, 1] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 4;\n          case 1:\n            return 9;\n          case 2:\n            return \"space\";\n          case 3:\n            return 10;\n          case 4:\n            return 6;\n          case 5:\n            return \"TXT\";\n        }\n      },\n      rules: [/^(?:info\\b)/i, /^(?:[\\s\\n\\r]+)/i, /^(?:[\\s]+)/i, /^(?:showInfo\\b)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nconst DEFAULT_INFO_DB = {\n  info: false\n};\nlet info = DEFAULT_INFO_DB.info;\nconst setInfo = (toggle) => {\n  info = toggle;\n};\nconst getInfo = () => info;\nconst clear = () => {\n  info = DEFAULT_INFO_DB.info;\n};\nconst db = {\n  clear,\n  setInfo,\n  getInfo\n};\nconst draw = (text, id, version) => {\n  log.debug(\"rendering info diagram\\n\" + text);\n  const svg = selectSvgElement(id);\n  configureSvgSize(svg, 100, 400, true);\n  const group = svg.append(\"g\");\n  group.append(\"text\").attr(\"x\", 100).attr(\"y\", 40).attr(\"class\", \"version\").attr(\"font-size\", 32).style(\"text-anchor\", \"middle\").text(`v${version}`);\n};\nconst renderer = { draw };\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer\n};\nexport {\n  diagram\n};\n"],"names":["parser","o","k","v","o2","l","length","$V0","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","setInfo","table","defaultActions","parseError","str","hash","recoverable","error","Error","this","parse","input","self","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","lex","token","pop","Array","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","$","first_line","last_line","first_column","last_column","range","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","DEFAULT_INFO_DB","info","diagram","db","clear","toggle","getInfo","renderer","draw","id","version","log","debug","svg","selectSvgElement","configureSvgSize","append","attr","style"],"sourceRoot":""}