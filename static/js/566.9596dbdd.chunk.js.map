{"version":3,"file":"static/js/566.9596dbdd.chunk.js","mappings":"8KAWIA,G,uBAAS,WACX,IAAIC,EAAI,SAASC,EAAGC,EAAGC,EAAIC,GACzB,IAAKD,EAAKA,GAAM,CAAC,EAAGC,EAAIH,EAAEI,OAAQD,IAAKD,EAAGF,EAAEG,IAAMF,GAElD,OAAOC,CACT,EAAGG,EAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAChJC,EAAU,CACZC,MAAO,WACP,EACAC,GAAI,CAAC,EACLC,SAAU,CAAE,MAAS,EAAG,MAAS,EAAG,SAAY,EAAG,SAAY,EAAG,IAAO,EAAG,KAAQ,EAAG,MAAS,EAAG,UAAa,EAAG,QAAW,GAAI,MAAS,GAAI,UAAa,GAAI,gBAAmB,GAAI,UAAa,GAAI,gBAAmB,GAAI,0BAA6B,GAAI,QAAW,GAAI,iBAAoB,GAAI,gBAAmB,GAAI,OAAU,GAAI,MAAS,GAAI,QAAW,EAAG,KAAQ,GAC/WC,WAAY,CAAE,EAAG,QAAS,EAAG,WAAY,EAAG,MAAO,EAAG,QAAS,GAAI,UAAW,GAAI,QAAS,GAAI,YAAa,GAAI,kBAAmB,GAAI,YAAa,GAAI,kBAAmB,GAAI,4BAA6B,GAAI,UAAW,GAAI,SAAU,GAAI,SAC7OC,aAAc,CAAC,EAAG,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAChJC,cAAe,SAAmBC,EAAQC,EAAQC,EAAUP,EAAIQ,EAASC,EAAIC,GAC3E,IAAIC,EAAKF,EAAGpB,OAAS,EACrB,OAAQmB,GACN,KAAK,EACH,OAAOC,EAAGE,EAAK,GACjB,KAAK,EAWL,KAAK,EACL,KAAK,EACHC,KAAKC,EAAI,GACT,MAXF,KAAK,EACHJ,EAAGE,EAAK,GAAGG,KAAKL,EAAGE,IACnBC,KAAKC,EAAIJ,EAAGE,EAAK,GACjB,MACF,KAAK,EACL,KAAK,EACHC,KAAKC,EAAIJ,EAAGE,GACZ,MAKF,KAAK,EACHX,EAAGe,cAAcC,gBAAgBP,EAAGE,GAAIM,OAAO,IAC/CL,KAAKC,EAAIJ,EAAGE,GAAIM,OAAO,GACvB,MACF,KAAK,EACHL,KAAKC,EAAIJ,EAAGE,GAAIO,OAChBlB,EAAGe,cAAcI,YAAYP,KAAKC,GAClC,MACF,KAAK,GACL,KAAK,GACHD,KAAKC,EAAIJ,EAAGE,GAAIO,OAChBlB,EAAGe,cAAcK,kBAAkBR,KAAKC,GACxC,MACF,KAAK,GACHb,EAAGqB,WAAWZ,EAAGE,GAAIM,OAAO,IAC5BL,KAAKC,EAAIJ,EAAGE,GAAIM,OAAO,GACvB,MACF,KAAK,GACHjB,EAAGsB,QAAQb,EAAGE,GAAK,EAAG,IACtBC,KAAKC,EAAIJ,EAAGE,GACZ,MACF,KAAK,GACHX,EAAGuB,SAASd,EAAGE,GAAIM,OAAO,IAC1BL,KAAKC,EAAIJ,EAAGE,GAGlB,EACAa,MAAO,CAAC,CAAE,EAAG,EAAG,EAAG,CAAC,EAAG,IAAM,CAAE,EAAG,CAAC,IAAMxC,EAAEM,EAAK,CAAC,EAAG,GAAI,CAAE,EAAG,IAAM,CAAE,EAAG,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAI,GAAI,GAAI,GAAI,GAAIC,EAAK,GAAIC,GAAOb,EAAEM,EAAK,CAAC,EAAG,GAAI,CAAE,EAAG,CAAC,EAAG,KAAON,EAAEM,EAAK,CAAC,EAAG,IAAK,CAAE,EAAG,GAAI,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAI,GAAI,GAAI,GAAI,GAAIC,EAAK,GAAIC,GAAOb,EAAEM,EAAK,CAAC,EAAG,IAAKN,EAAEM,EAAK,CAAC,EAAG,IAAKN,EAAEM,EAAK,CAAC,EAAG,IAAK,CAAE,GAAI,CAAC,EAAG,KAAO,CAAE,GAAI,CAAC,EAAG,KAAON,EAAEM,EAAK,CAAC,EAAG,KAAMN,EAAEM,EAAK,CAAC,EAAG,KAAMN,EAAEM,EAAK,CAAC,EAAG,KAAMN,EAAEM,EAAK,CAAC,EAAG,KAAMN,EAAEM,EAAK,CAAC,EAAG,KAAMN,EAAEM,EAAK,CAAC,EAAG,KAAMN,EAAEM,EAAK,CAAC,EAAG,IAAKN,EAAEM,EAAK,CAAC,EAAG,IAAKN,EAAEM,EAAK,CAAC,EAAG,MAChjBmC,eAAgB,CAAC,EACjBC,WAAY,SAAoBC,EAAKC,GACnC,IAAIA,EAAKC,YAEF,CACL,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,CACR,CALElB,KAAKb,MAAM4B,EAMf,EACAK,MAAO,SAAeC,GACpB,IAAIC,EAAOtB,KAAMuB,EAAQ,CAAC,GAAIC,EAAS,GAAIC,EAAS,CAAC,MAAOC,EAAS,GAAId,EAAQZ,KAAKY,MAAOnB,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAC7HiC,EAAOD,EAAOE,MAAMC,KAAKC,UAAW,GACpCC,EAASC,OAAOC,OAAOjC,KAAKkC,OAC5BC,EAAc,CAAE/C,GAAI,CAAC,GACzB,IAAK,IAAIf,KAAK2B,KAAKZ,GACb4C,OAAOI,UAAUC,eAAeR,KAAK7B,KAAKZ,GAAIf,KAChD8D,EAAY/C,GAAGf,GAAK2B,KAAKZ,GAAGf,IAGhC0D,EAAOO,SAASjB,EAAOc,EAAY/C,IACnC+C,EAAY/C,GAAG8C,MAAQH,EACvBI,EAAY/C,GAAGjB,OAAS6B,KACI,oBAAjB+B,EAAOQ,SAChBR,EAAOQ,OAAS,CAAC,GAEnB,IAAIC,EAAQT,EAAOQ,OACnBb,EAAOxB,KAAKsC,GACZ,IAAIC,EAASV,EAAOW,SAAWX,EAAOW,QAAQD,OAM9C,SAASE,IACP,IAAIC,EASJ,MAPqB,kBADrBA,EAAQpB,EAAOqB,OAASd,EAAOY,OAzBqH,KA2B9IC,aAAiBE,QAEnBF,GADApB,EAASoB,GACMC,OAEjBD,EAAQtB,EAAKjC,SAASuD,IAAUA,GAE3BA,CACT,CAhByC,oBAA9BT,EAAY/C,GAAG0B,WACxBd,KAAKc,WAAaqB,EAAY/C,GAAG0B,WAEjCd,KAAKc,WAAakB,OAAOe,eAAe/C,MAAMc,WAehD,IADA,IAAIkC,EAAQC,EAAOC,EAAQC,EAAeC,EAAGC,EAAKC,EAAUC,EAA9BC,EAAQ,CAAC,IAC1B,CAUX,GATAP,EAAQ1B,EAAMA,EAAM9C,OAAS,GACzBuB,KAAKa,eAAeoC,GACtBC,EAASlD,KAAKa,eAAeoC,IAEd,OAAXD,GAAoC,oBAAVA,IAC5BA,EAASL,KAEXO,EAAStC,EAAMqC,IAAUrC,EAAMqC,GAAOD,IAElB,qBAAXE,IAA2BA,EAAOzE,SAAWyE,EAAO,GAAI,CACjE,IAAIO,EAAS,GAEb,IAAKL,KADLG,EAAW,GACD3C,EAAMqC,GACVjD,KAAKV,WAAW8D,IAAMA,EAlD6G,GAmDrIG,EAASrD,KAAK,IAAMF,KAAKV,WAAW8D,GAAK,KAI3CK,EADE1B,EAAO2B,aACA,wBAA0B/D,EAAW,GAAK,MAAQoC,EAAO2B,eAAiB,eAAiBH,EAASI,KAAK,MAAQ,WAAa3D,KAAKV,WAAW0D,IAAWA,GAAU,IAEnK,wBAA0BrD,EAAW,GAAK,iBAzD6F,GAyD1EqD,EAAgB,eAAiB,KAAOhD,KAAKV,WAAW0D,IAAWA,GAAU,KAErJhD,KAAKc,WAAW2C,EAAQ,CACtBG,KAAM7B,EAAO8B,MACbjB,MAAO5C,KAAKV,WAAW0D,IAAWA,EAClCc,KAAM/B,EAAOpC,SACboE,IAAKvB,EACLe,YAEJ,CACA,GAAIL,EAAO,aAAcJ,OAASI,EAAOzE,OAAS,EAChD,MAAM,IAAI0C,MAAM,oDAAsD8B,EAAQ,YAAcD,GAE9F,OAAQE,EAAO,IACb,KAAK,EACH3B,EAAMrB,KAAK8C,GACXvB,EAAOvB,KAAK6B,EAAOtC,QACnBiC,EAAOxB,KAAK6B,EAAOQ,QACnBhB,EAAMrB,KAAKgD,EAAO,IAClBF,EAAS,KAEPtD,EAASqC,EAAOrC,OAChBD,EAASsC,EAAOtC,OAChBE,EAAWoC,EAAOpC,SAClB6C,EAAQT,EAAOQ,OAEjB,MACF,KAAK,EAwBH,GAvBAc,EAAMrD,KAAKT,aAAa2D,EAAO,IAAI,GACnCM,EAAMvD,EAAIwB,EAAOA,EAAOhD,OAAS4E,GACjCG,EAAM1D,GAAK,CACTkE,WAAYtC,EAAOA,EAAOjD,QAAU4E,GAAO,IAAIW,WAC/CC,UAAWvC,EAAOA,EAAOjD,OAAS,GAAGwF,UACrCC,aAAcxC,EAAOA,EAAOjD,QAAU4E,GAAO,IAAIa,aACjDC,YAAazC,EAAOA,EAAOjD,OAAS,GAAG0F,aAErC1B,IACFe,EAAM1D,GAAGsE,MAAQ,CACf1C,EAAOA,EAAOjD,QAAU4E,GAAO,IAAIe,MAAM,GACzC1C,EAAOA,EAAOjD,OAAS,GAAG2F,MAAM,KAYnB,qBATjBjB,EAAInD,KAAKR,cAAc6E,MAAMb,EAAO,CAClC/D,EACAC,EACAC,EACAwC,EAAY/C,GACZ8D,EAAO,GACPzB,EACAC,GACA4C,OAAO3C,KAEP,OAAOwB,EAELE,IACF9B,EAAQA,EAAMK,MAAM,GAAI,EAAIyB,EAAM,GAClC5B,EAASA,EAAOG,MAAM,GAAI,EAAIyB,GAC9B3B,EAASA,EAAOE,MAAM,GAAI,EAAIyB,IAEhC9B,EAAMrB,KAAKF,KAAKT,aAAa2D,EAAO,IAAI,IACxCzB,EAAOvB,KAAKsD,EAAMvD,GAClByB,EAAOxB,KAAKsD,EAAM1D,IAClBwD,EAAW1C,EAAMW,EAAMA,EAAM9C,OAAS,IAAI8C,EAAMA,EAAM9C,OAAS,IAC/D8C,EAAMrB,KAAKoD,GACX,MACF,KAAK,EACH,OAAO,EAEb,CACA,OAAO,CACT,GAEEpB,EACW,CACXqC,IAAK,EACLzD,WAAY,SAAoBC,EAAKC,GACnC,IAAIhB,KAAKZ,GAAGjB,OAGV,MAAM,IAAIgD,MAAMJ,GAFhBf,KAAKZ,GAAGjB,OAAO2C,WAAWC,EAAKC,EAInC,EAEAsB,SAAU,SAASjB,EAAOjC,GAiBxB,OAhBAY,KAAKZ,GAAKA,GAAMY,KAAKZ,IAAM,CAAC,EAC5BY,KAAKwE,OAASnD,EACdrB,KAAKyE,MAAQzE,KAAK0E,WAAa1E,KAAK2E,MAAO,EAC3C3E,KAAKL,SAAWK,KAAKN,OAAS,EAC9BM,KAAKP,OAASO,KAAK4E,QAAU5E,KAAK6D,MAAQ,GAC1C7D,KAAK6E,eAAiB,CAAC,WACvB7E,KAAKuC,OAAS,CACZyB,WAAY,EACZE,aAAc,EACdD,UAAW,EACXE,YAAa,GAEXnE,KAAK0C,QAAQD,SACfzC,KAAKuC,OAAO6B,MAAQ,CAAC,EAAG,IAE1BpE,KAAK8E,OAAS,EACP9E,IACT,EAEAqB,MAAO,WACL,IAAI0D,EAAK/E,KAAKwE,OAAO,GAiBrB,OAhBAxE,KAAKP,QAAUsF,EACf/E,KAAKN,SACLM,KAAK8E,SACL9E,KAAK6D,OAASkB,EACd/E,KAAK4E,SAAWG,EACJA,EAAGlB,MAAM,oBAEnB7D,KAAKL,WACLK,KAAKuC,OAAO0B,aAEZjE,KAAKuC,OAAO4B,cAEVnE,KAAK0C,QAAQD,QACfzC,KAAKuC,OAAO6B,MAAM,KAEpBpE,KAAKwE,OAASxE,KAAKwE,OAAO5C,MAAM,GACzBmD,CACT,EAEAC,MAAO,SAASD,GACd,IAAI1B,EAAM0B,EAAGtG,OACTwG,EAAQF,EAAGG,MAAM,iBACrBlF,KAAKwE,OAASO,EAAK/E,KAAKwE,OACxBxE,KAAKP,OAASO,KAAKP,OAAOY,OAAO,EAAGL,KAAKP,OAAOhB,OAAS4E,GACzDrD,KAAK8E,QAAUzB,EACf,IAAI8B,EAAWnF,KAAK6D,MAAMqB,MAAM,iBAChClF,KAAK6D,MAAQ7D,KAAK6D,MAAMxD,OAAO,EAAGL,KAAK6D,MAAMpF,OAAS,GACtDuB,KAAK4E,QAAU5E,KAAK4E,QAAQvE,OAAO,EAAGL,KAAK4E,QAAQnG,OAAS,GACxDwG,EAAMxG,OAAS,IACjBuB,KAAKL,UAAYsF,EAAMxG,OAAS,GAElC,IAAI0E,EAAInD,KAAKuC,OAAO6B,MAWpB,OAVApE,KAAKuC,OAAS,CACZyB,WAAYhE,KAAKuC,OAAOyB,WACxBC,UAAWjE,KAAKL,SAAW,EAC3BuE,aAAclE,KAAKuC,OAAO2B,aAC1BC,YAAac,GAASA,EAAMxG,SAAW0G,EAAS1G,OAASuB,KAAKuC,OAAO2B,aAAe,GAAKiB,EAASA,EAAS1G,OAASwG,EAAMxG,QAAQA,OAASwG,EAAM,GAAGxG,OAASuB,KAAKuC,OAAO2B,aAAeb,GAEtLrD,KAAK0C,QAAQD,SACfzC,KAAKuC,OAAO6B,MAAQ,CAACjB,EAAE,GAAIA,EAAE,GAAKnD,KAAKN,OAAS2D,IAElDrD,KAAKN,OAASM,KAAKP,OAAOhB,OACnBuB,IACT,EAEAoF,KAAM,WAEJ,OADApF,KAAKyE,OAAQ,EACNzE,IACT,EAEAqF,OAAQ,WACN,OAAIrF,KAAK0C,QAAQ4C,iBACftF,KAAK0E,YAAa,EAQb1E,MANEA,KAAKc,WAAW,0BAA4Bd,KAAKL,SAAW,GAAK,mIAAqIK,KAAK0D,eAAgB,CAChOE,KAAM,GACNhB,MAAO,KACPkB,KAAM9D,KAAKL,UAIjB,EAEA4F,KAAM,SAASC,GACbxF,KAAKgF,MAAMhF,KAAK6D,MAAMjC,MAAM4D,GAC9B,EAEAC,UAAW,WACT,IAAIC,EAAO1F,KAAK4E,QAAQvE,OAAO,EAAGL,KAAK4E,QAAQnG,OAASuB,KAAK6D,MAAMpF,QACnE,OAAQiH,EAAKjH,OAAS,GAAK,MAAQ,IAAMiH,EAAKrF,QAAQ,IAAIsF,QAAQ,MAAO,GAC3E,EAEAC,cAAe,WACb,IAAIC,EAAO7F,KAAK6D,MAIhB,OAHIgC,EAAKpH,OAAS,KAChBoH,GAAQ7F,KAAKwE,OAAOnE,OAAO,EAAG,GAAKwF,EAAKpH,UAElCoH,EAAKxF,OAAO,EAAG,KAAOwF,EAAKpH,OAAS,GAAK,MAAQ,KAAKkH,QAAQ,MAAO,GAC/E,EAEAjC,aAAc,WACZ,IAAIoC,EAAM9F,KAAKyF,YACXM,EAAI,IAAIjD,MAAMgD,EAAIrH,OAAS,GAAGkF,KAAK,KACvC,OAAOmC,EAAM9F,KAAK4F,gBAAkB,KAAOG,EAAI,GACjD,EAEAC,WAAY,SAASnC,EAAOoC,GAC1B,IAAIrD,EAAOqC,EAAOiB,EAmDlB,GAlDIlG,KAAK0C,QAAQ4C,kBACfY,EAAS,CACPvG,SAAUK,KAAKL,SACf4C,OAAQ,CACNyB,WAAYhE,KAAKuC,OAAOyB,WACxBC,UAAWjE,KAAKiE,UAChBC,aAAclE,KAAKuC,OAAO2B,aAC1BC,YAAanE,KAAKuC,OAAO4B,aAE3B1E,OAAQO,KAAKP,OACboE,MAAO7D,KAAK6D,MACZsC,QAASnG,KAAKmG,QACdvB,QAAS5E,KAAK4E,QACdlF,OAAQM,KAAKN,OACboF,OAAQ9E,KAAK8E,OACbL,MAAOzE,KAAKyE,MACZD,OAAQxE,KAAKwE,OACbpF,GAAIY,KAAKZ,GACTyF,eAAgB7E,KAAK6E,eAAejD,MAAM,GAC1C+C,KAAM3E,KAAK2E,MAET3E,KAAK0C,QAAQD,SACfyD,EAAO3D,OAAO6B,MAAQpE,KAAKuC,OAAO6B,MAAMxC,MAAM,MAGlDqD,EAAQpB,EAAM,GAAGA,MAAM,sBAErB7D,KAAKL,UAAYsF,EAAMxG,QAEzBuB,KAAKuC,OAAS,CACZyB,WAAYhE,KAAKuC,OAAO0B,UACxBA,UAAWjE,KAAKL,SAAW,EAC3BuE,aAAclE,KAAKuC,OAAO4B,YAC1BA,YAAac,EAAQA,EAAMA,EAAMxG,OAAS,GAAGA,OAASwG,EAAMA,EAAMxG,OAAS,GAAGoF,MAAM,UAAU,GAAGpF,OAASuB,KAAKuC,OAAO4B,YAAcN,EAAM,GAAGpF,QAE/IuB,KAAKP,QAAUoE,EAAM,GACrB7D,KAAK6D,OAASA,EAAM,GACpB7D,KAAKmG,QAAUtC,EACf7D,KAAKN,OAASM,KAAKP,OAAOhB,OACtBuB,KAAK0C,QAAQD,SACfzC,KAAKuC,OAAO6B,MAAQ,CAACpE,KAAK8E,OAAQ9E,KAAK8E,QAAU9E,KAAKN,SAExDM,KAAKyE,OAAQ,EACbzE,KAAK0E,YAAa,EAClB1E,KAAKwE,OAASxE,KAAKwE,OAAO5C,MAAMiC,EAAM,GAAGpF,QACzCuB,KAAK4E,SAAWf,EAAM,GACtBjB,EAAQ5C,KAAKR,cAAcqC,KAAK7B,KAAMA,KAAKZ,GAAIY,KAAMiG,EAAcjG,KAAK6E,eAAe7E,KAAK6E,eAAepG,OAAS,IAChHuB,KAAK2E,MAAQ3E,KAAKwE,SACpBxE,KAAK2E,MAAO,GAEV/B,EACF,OAAOA,EACF,GAAI5C,KAAK0E,WAAY,CAC1B,IAAK,IAAIrG,KAAK6H,EACZlG,KAAK3B,GAAK6H,EAAO7H,GAEnB,OAAO,CACT,CACA,OAAO,CACT,EAEAwH,KAAM,WACJ,GAAI7F,KAAK2E,KACP,OAAO3E,KAAKuE,IAKd,IAAI3B,EAAOiB,EAAOuC,EAAWC,EAHxBrG,KAAKwE,SACRxE,KAAK2E,MAAO,GAGT3E,KAAKyE,QACRzE,KAAKP,OAAS,GACdO,KAAK6D,MAAQ,IAGf,IADA,IAAIyC,EAAQtG,KAAKuG,gBACRC,EAAI,EAAGA,EAAIF,EAAM7H,OAAQ+H,IAEhC,IADAJ,EAAYpG,KAAKwE,OAAOX,MAAM7D,KAAKsG,MAAMA,EAAME,SAC5B3C,GAASuC,EAAU,GAAG3H,OAASoF,EAAM,GAAGpF,QAAS,CAGlE,GAFAoF,EAAQuC,EACRC,EAAQG,EACJxG,KAAK0C,QAAQ4C,gBAAiB,CAEhC,IAAc,KADd1C,EAAQ5C,KAAKgG,WAAWI,EAAWE,EAAME,KAEvC,OAAO5D,EACF,GAAI5C,KAAK0E,WAAY,CAC1Bb,GAAQ,EACR,QACF,CACE,OAAO,CAEX,CAAO,IAAK7D,KAAK0C,QAAQ+D,KACvB,KAEJ,CAEF,OAAI5C,GAEY,KADdjB,EAAQ5C,KAAKgG,WAAWnC,EAAOyC,EAAMD,MAE5BzD,EAIS,KAAhB5C,KAAKwE,OACAxE,KAAKuE,IAELvE,KAAKc,WAAW,0BAA4Bd,KAAKL,SAAW,GAAK,yBAA2BK,KAAK0D,eAAgB,CACtHE,KAAM,GACNhB,MAAO,KACPkB,KAAM9D,KAAKL,UAGjB,EAEAgD,IAAK,WACH,IAAIQ,EAAInD,KAAK6F,OACb,OAAI1C,GAGKnD,KAAK2C,KAEhB,EAEA+D,MAAO,SAAeC,GACpB3G,KAAK6E,eAAe3E,KAAKyG,EAC3B,EAEAC,SAAU,WAER,OADQ5G,KAAK6E,eAAepG,OAAS,EAC7B,EACCuB,KAAK6E,eAAehC,MAEpB7C,KAAK6E,eAAe,EAE/B,EAEA0B,cAAe,WACb,OAAIvG,KAAK6E,eAAepG,QAAUuB,KAAK6E,eAAe7E,KAAK6E,eAAepG,OAAS,GAC1EuB,KAAK6G,WAAW7G,KAAK6E,eAAe7E,KAAK6E,eAAepG,OAAS,IAAI6H,MAErEtG,KAAK6G,WAAoB,QAAEP,KAEtC,EAEAQ,SAAU,SAAkBtB,GAE1B,OADAA,EAAIxF,KAAK6E,eAAepG,OAAS,EAAIsI,KAAKC,IAAIxB,GAAK,KAC1C,EACAxF,KAAK6E,eAAeW,GAEpB,SAEX,EAEAyB,UAAW,SAAmBN,GAC5B3G,KAAK0G,MAAMC,EACb,EAEAO,eAAgB,WACd,OAAOlH,KAAK6E,eAAepG,MAC7B,EACAiE,QAAS,CAAE,oBAAoB,GAC/BlD,cAAe,SAAmBJ,EAAI+H,EAAKC,EAA2BC,GACpE,OAAQD,GACN,KAAK,EAEL,KAAK,EAIL,KAAK,EAEL,KAAK,EACH,MALF,KAAK,EACH,OAAO,GAKT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,GACT,KAAK,EAEH,OADApH,KAAK0G,MAAM,aACJ,GACT,KAAK,EAEH,OADA1G,KAAK4G,WACE,kBACT,KAAK,EAEH,OADA5G,KAAK0G,MAAM,aACJ,GACT,KAAK,GAEH,OADA1G,KAAK4G,WACE,kBACT,KAAK,GACH5G,KAAK0G,MAAM,uBACX,MACF,KAAK,GACH1G,KAAK4G,WACL,MACF,KAAK,GACH,MAAO,4BACT,KAAK,GACH,OAAO,GACT,KAAK,GACH,OAAO,GACT,KAAK,GACH,OAAO,GACT,KAAK,GACH,OAAO,EACT,KAAK,GACH,MAAO,UAEb,EACAN,MAAO,CAAC,sBAAuB,sBAAuB,cAAe,YAAa,gBAAiB,mBAAoB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBAA0B,aAAc,eAAgB,2BAA4B,qBAAsB,kBAAmB,UAAW,WAC5XO,WAAY,CAAE,oBAAuB,CAAE,MAAS,CAAC,GAAI,IAAK,WAAa,GAAS,UAAa,CAAE,MAAS,CAAC,IAAK,WAAa,GAAS,UAAa,CAAE,MAAS,CAAC,GAAI,WAAa,GAAS,QAAW,CAAE,MAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,WAAa,KAKnR,SAASS,IACPtH,KAAKZ,GAAK,CAAC,CACb,CAGA,OANAF,EAAQgD,MAAQA,EAIhBoF,EAAOlF,UAAYlD,EACnBA,EAAQoI,OAASA,EACV,IAAIA,CACb,CA7hBa,IA8hBbnJ,EAAOA,OAASA,EAChB,MAAMoJ,EAAWpJ,EACjB,IAAIqJ,EAAiB,GACjBC,EAAgB,EACpB,MAAMC,EAAW,GACXC,EAAQ,GACRC,EAAW,GACXzH,EAAcA,IAAM0H,EAAAA,EACpBC,EAAQ,WACZJ,EAASjJ,OAAS,EAClBkJ,EAAMlJ,OAAS,EACf+I,EAAiB,GACjBI,EAASnJ,OAAS,GAClBsJ,EAAAA,EAAAA,IACF,EACMtH,EAAa,SAASuH,GAC1BR,EAAiBQ,EACjBN,EAASxH,KAAK8H,EAChB,EACMC,EAAc,WAClB,OAAOP,CACT,EACMQ,EAAW,WACf,IAAIC,EAAoBC,IAExB,IAAIC,EAAiB,EACrB,MAAQF,GAAqBE,EAFZ,KAGfF,EAAoBC,IACpBC,IAGF,OADAV,EAAMzH,QAAQ0H,GACPD,CACT,EACMjH,EAAU,SAAS4H,EAAQ7J,EAAQ8J,GACvC,MAAMC,EAAU,CACdC,GAAIhB,IACJiB,QAASlB,EACTmB,KAAMnB,EACNoB,KAAMN,EACNO,MAAOpK,GAAkB,EAEzBqK,OAAQP,EAAQ,CAACA,GAAS,IAE5BX,EAAS1H,KAAKsI,EAChB,EACM7H,EAAW,SAAS4H,GACJX,EAASmB,MAAMH,GAASA,EAAKH,KAAOhB,EAAgB,IAC5DqB,OAAO5I,KAAKqI,EAC1B,EACMS,EAAa,SAASC,GAC1B,MAAMC,EAAU,CACdR,QAASlB,EACTmB,KAAMnB,EACN2B,YAAaF,EACbL,KAAMK,EACNG,QAAS,IAEXzB,EAAMzH,KAAKgJ,EACb,EACMd,EAAe,WAInB,IAAIiB,GAAe,EACnB,IAAK,MAAO7C,EAAGgC,KAAYZ,EAAS0B,UAH3B1B,EAIKpB,GAJS+C,UAKrBF,EAAeA,GAAgBb,EAAQe,UAEzC,OAAOF,CACT,EACMG,EAAa,CACjB1B,QACA3H,cACAM,aACAwH,cACAC,WACAxH,UACAsI,aACArI,YAEI8I,EAAqBzH,OAAO0H,OAAuB1H,OAAO2H,eAAe,CAC7EC,UAAW,KACXjJ,WACAF,aACAC,UACAsI,aACAlB,QACA+B,QAASL,EACTrJ,cACA8H,cACAC,YACC4B,OAAOC,YAAa,CAAEC,MAAO,aAmLD,WAC7B,SAASC,EAAOC,EAASC,EAAGC,EAAGC,EAAGC,EAAOC,EAAQC,EAAWC,GAE1DC,EADaP,EAAEQ,OAAO,QAAQC,KAAK,IAAKR,EAAIE,EAAQ,GAAGM,KAAK,IAAKP,EAAIE,EAAS,EAAI,GAAGM,MAAM,aAAcJ,GAAQI,MAAM,cAAe,UAAUjH,KAAKsG,GACjIM,EACtB,CACA,SAASM,EAAQZ,EAASC,EAAGC,EAAGC,EAAGC,EAAOC,EAAQC,EAAWO,EAAMN,GACjE,MAAM,aAAEO,EAAY,eAAEC,GAAmBF,EACnC9F,EAAQiF,EAAQhF,MAAM,gBAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIvB,EAAMxG,OAAQ+H,IAAK,CACrC,MAAM0E,EAAK1E,EAAIwE,EAAeA,GAAgB/F,EAAMxG,OAAS,GAAK,EAC5DmF,EAAOuG,EAAEQ,OAAO,QAAQC,KAAK,IAAKR,EAAIE,EAAQ,GAAGM,KAAK,IAAKP,GAAGO,KAAK,OAAQH,GAAQI,MAAM,cAAe,UAAUA,MAAM,YAAaG,GAAcH,MAAM,cAAeI,GAC9KrH,EAAK+G,OAAO,SAASC,KAAK,IAAKR,EAAIE,EAAQ,GAAGM,KAAK,KAAMM,GAAItH,KAAKqB,EAAMuB,IACxE5C,EAAKgH,KAAK,IAAKP,EAAIE,EAAS,GAAGK,KAAK,oBAAqB,WAAWA,KAAK,qBAAsB,WAC/FF,EAAc9G,EAAM4G,EACtB,CACF,CACA,SAASW,EAAKjB,EAASC,EAAGC,EAAGC,EAAGC,EAAOC,EAAQC,EAAWO,GACxD,MAAMK,EAAOjB,EAAEQ,OAAO,UAEhB/G,EADIwH,EAAKT,OAAO,iBAAiBC,KAAK,IAAKR,GAAGQ,KAAK,IAAKP,GAAGO,KAAK,QAASN,GAAOM,KAAK,SAAUL,GAAQK,KAAK,WAAY,SAC/GD,OAAO,aAAaE,MAAM,UAAW,SAASA,MAAM,SAAU,QAAQA,MAAM,QAAS,QACpGjH,EAAK+G,OAAO,OAAOC,KAAK,QAAS,SAASC,MAAM,UAAW,cAAcA,MAAM,aAAc,UAAUA,MAAM,iBAAkB,UAAUjH,KAAKsG,GAC9IY,EAAQZ,EAASkB,EAAMhB,EAAGC,EAAGC,EAAOC,EAAQC,EAAWO,GACvDL,EAAc9G,EAAM4G,EACtB,CACA,SAASE,EAAcW,EAAQC,GAC7B,IAAK,MAAMC,KAAOD,EACZC,KAAOD,GACTD,EAAOT,KAAKW,EAAKD,EAAkBC,GAGzC,CAIF,CAlC+B,GAsC/B,SAASC,EAAK5H,EAAM0G,GAClB1G,EAAK6H,MAAK,WACR,IAA8EC,EAA1EC,GAAQC,EAAAA,EAAAA,KAAO5L,MAAO6L,EAAQF,EAAM/H,OAAOsB,MAAM,cAAc4G,UAAiBhI,EAAO,GAAsBuG,EAAIsB,EAAMf,KAAK,KAAMM,EAAKa,WAAWJ,EAAMf,KAAK,OAAQoB,EAAQL,EAAM/H,KAAK,MAAM+G,OAAO,SAASC,KAAK,IAAK,GAAGA,KAAK,IAAKP,GAAGO,KAAK,KAAMM,EAAK,MAC5P,IAAK,IAAIe,EAAI,EAAGA,EAAIJ,EAAMpN,OAAQwN,IAChCP,EAAOG,EAAMA,EAAMpN,OAAS,EAAIwN,GAChCnI,EAAK5D,KAAKwL,GACVM,EAAMpI,KAAKE,EAAKH,KAAK,KAAKrD,SACtB0L,EAAME,OAAOC,wBAA0B7B,GAAkB,SAAToB,KAClD5H,EAAKjB,MACLmJ,EAAMpI,KAAKE,EAAKH,KAAK,KAAKrD,QAExBwD,EADW,SAAT4H,EACK,CAAC,IAED,CAACA,GAEVM,EAAQL,EAAMhB,OAAO,SAASC,KAAK,IAAK,GAAGA,KAAK,IAAKP,GAAGO,KAAK,KAAMwB,SAAmBxI,KAAK8H,GAGjG,GACF,CACA,MA4BMW,EAAa,SAASC,EAAMJ,EAAMxD,GAEtC4D,EAAK3B,OAAO,QAAQC,KAAK,KAAM,QAAUsB,EAAKzD,IAAImC,KAAK,QAAS,iBAAmBsB,EAAKvD,MAAMiC,KAC5F,IAAG,MAAAtG,OACG4H,EAAK3B,OAHF,EAGa,MAAAjG,OAAoB,GAAd4H,EAAK3B,OAAe,iBAAAjG,OAAgB4H,EAAK5B,MAAQ,GAAM,eAAAhG,OAAc4H,EAAK3B,OAH7F,EAGwG,UAEnH+B,EAAK3B,OAAO,QAAQC,KAAK,QAAS,aAAelC,GAASkC,KAAK,KAAM,GAAGA,KAAK,KAAMsB,EAAK3B,QAAQK,KAAK,KAAMsB,EAAK5B,OAAOM,KAAK,KAAMsB,EAAK3B,OACzI,EACMgC,EA3De,SAASC,GAC5BA,EAAS7B,OAAO,QAAQA,OAAO,UAAUC,KAAK,KAAM,aAAaA,KAAK,OAAQ,GAAGA,KAAK,OAAQ,GAAGA,KAAK,cAAe,GAAGA,KAAK,eAAgB,GAAGA,KAAK,SAAU,QAAQD,OAAO,QAAQC,KAAK,IAAK,mBAClM,EAyDM2B,EApCW,SAASD,EAAMJ,EAAMO,EAAa1B,GACjD,MAAMrC,EAAU+D,EA7OG,GA6O0B,EACvCC,EAAWJ,EAAK3B,OAAO,KAC7BuB,EAAKxD,QAAUA,EACfgE,EAAS9B,KACP,SACCsB,EAAKS,MAAQT,EAAKS,MAAQ,IAAM,IAAjC,yBAAwEjE,GAE1E,MAAMkE,EAAUF,EAAS/B,OAAO,KAC1BkC,EAAWH,EAAS/B,OAAO,KAE3BmC,EADMD,EAASlC,OAAO,QAAQ/G,KAAKsI,EAAKjD,OAAO2B,KAAK,KAAM,OAAOA,KAAK,qBAAsB,UAAUA,KAAK,oBAAqB,UAAUA,KAAK,cAAe,UAAU/I,KAAK2J,EAAMU,EAAK5B,OAC7K4B,OAAOa,UAClBC,EAAWjC,EAAKiC,UAAYjC,EAAKiC,SAASrH,QAAUoF,EAAKiC,SAASrH,QAAQ,KAAM,IAAMoF,EAAKiC,SAMjG,OALAd,EAAK3B,OAASuC,EAAKvC,OAAoB,IAAXyC,EAAiB,GAAMd,EAAKe,QACxDf,EAAK3B,OAASxD,KAAKmG,IAAIhB,EAAK3B,OAAQ2B,EAAKiB,WACzCjB,EAAK5B,MAAQ4B,EAAK5B,MAAQ,EAAI4B,EAAKe,QACnCJ,EAASjC,KAAK,YAAa,aAAesB,EAAK5B,MAAQ,EAAI,KAAO4B,EAAKe,QAAU,EAAI,KACrFZ,EAAWO,EAASV,EAAMxD,GACnBwD,CACT,EAiBMK,EAhBuB,SAASD,EAAMJ,EAAMnB,GAChD,MAAM8B,EAAWP,EAAK3B,OAAO,KAEvBmC,EADMD,EAASlC,OAAO,QAAQ/G,KAAKsI,EAAKjD,OAAO2B,KAAK,KAAM,OAAOA,KAAK,qBAAsB,UAAUA,KAAK,oBAAqB,UAAUA,KAAK,cAAe,UAAU/I,KAAK2J,EAAMU,EAAK5B,OAC7K4B,OAAOa,UAClBC,EAAWjC,EAAKiC,UAAYjC,EAAKiC,SAASrH,QAAUoF,EAAKiC,SAASrH,QAAQ,KAAM,IAAMoF,EAAKiC,SAEjG,OADAH,EAASO,SACFN,EAAKvC,OAAoB,IAAXyC,EAAiB,GAAMd,EAAKe,OACnD,EAoKMI,EAAY,SAASC,EAAUC,EAAQC,EAAcC,EAASC,EAASC,EAAe5C,EAAM6C,EAAeC,EAAoBC,EAAkBC,GACrJ,IAAIC,EACJ,IAAK,MAAMpF,KAAQ2E,EAAQ,CACzB,MAAMU,EAAW,CACfhF,MAAOL,EAAKA,KACZF,QAAS8E,EACTU,OAAQV,EACRlD,MAAO,IACP2C,QAAS,GACTE,UAAWQ,GAEbQ,EAAAA,EAAIC,MAAM,WAAYH,GACtB,MAAMI,EAAcf,EAAS3C,OAAO,KAAKC,KAAK,QAAS,eAEjD0D,EADO/B,EAAiB8B,EAAaJ,EAAUT,EAAczC,GAC3CR,OAIxB,GAHA4D,EAAAA,EAAIC,MAAM,wBAAyBE,GACnCD,EAAYzD,KAAK,YAAa,aAAFtG,OAAemJ,EAAO,MAAAnJ,OAAKoJ,EAAO,MAC9DC,EAAgB5G,KAAKmG,IAAIS,EAAeW,GACpC1F,EAAKE,OAAQ,CACf,MAAMyF,EAAcjB,EAAS3C,OAAO,KAAKC,KAAK,QAAS,eACvD,IAAI4D,EAAab,EACjBD,GAAW,IACXc,GAA0BC,EAAWnB,EAAU1E,EAAKE,OAAQ0E,EAAcC,EAASC,EAAS3C,GAC5F2C,GAAW,IACXa,EAAY5D,OAAO,QAAQC,KAAK,KAAM6C,EAAU,IAAS7C,KAAK,KAAM8C,EAAUC,GAAe/C,KAAK,KAAM6C,EAAU,IAAS7C,KACzH,KACA8C,EAAUC,GAAiBI,EAAoBJ,EAAgBG,GAAoBD,EAAqB,KACxGjD,KAAK,eAAgB,GAAGA,KAAK,SAAU,SAASA,KAAK,aAAc,mBAAmBA,KAAK,mBAAoB,MACnH,CACA6C,GAAoB,IAChBM,KAA+C,OAAvBC,EAAKjD,EAAK2D,eAAoB,EAASV,EAAGW,oBACpEnB,GAEJ,CACAE,GAAoB,EACtB,EACMe,EAAa,SAASnB,EAAUxE,EAAQ0E,EAAcC,EAASC,EAAS3C,GAC5E,IAAI6D,EAAiB,EACrB,MAAMC,EAAcnB,EACpBA,GAAoB,IACpB,IAAK,MAAMnF,KAASO,EAAQ,CAC1B,MAAMgG,EAAY,CAChB7F,MAAOV,EACPG,QAAS8E,EACTU,OAAQV,EACRlD,MAAO,IACP2C,QAAS,GACTE,UAAW,IAEbgB,EAAAA,EAAIC,MAAM,YAAaU,GACvB,MAAMC,EAAezB,EAAS3C,OAAO,KAAKC,KAAK,QAAS,gBAElDoE,EADOzC,EAAiBwC,EAAcD,EAAWtB,EAAczC,GAC5CR,OACzBqE,GAAkCI,EAClCD,EAAanE,KAAK,YAAa,aAAFtG,OAAemJ,EAAO,MAAAnJ,OAAKoJ,EAAO,MAC/DA,EAAUA,EAAU,GAAKsB,CAC3B,CAEA,OADAtB,EAAUmB,EACHD,CACT,EA+EMK,EAAU,CACdxF,KACAyF,SAhFe,CACfC,QAASA,OAETC,KA5MW,SAASxL,EAAM6E,EAAI4G,EAASC,GAAS,IAAAC,EAAAC,EAAAC,EAC5CzB,EAAI0B,EACR,MAAM3E,GAAO4E,EAAAA,EAAAA,KACPC,EAA6B,QAAlBL,EAAGxE,EAAK8E,kBAAU,IAAAN,EAAAA,EAAI,GACvCpB,EAAAA,EAAIC,MAAM,WAAYkB,EAAQ7F,IAC9B,MAAMqG,EAAgB/E,EAAK+E,cAC3B,IAAIC,EACkB,YAAlBD,IACFC,GAAiBnE,EAAAA,EAAAA,KAAO,KAAOnD,IAEjC,MACMuH,GADyB,YAAlBF,GAA8BlE,EAAAA,EAAAA,KAAOmE,EAAeE,QAAQ,GAAGC,gBAAgB9E,OAAQQ,EAAAA,EAAAA,KAAO,SAC1FA,OAAO,IAAMnD,GAC9BuH,EAAIrF,OAAO,KACX,MAAM4C,EAAS+B,EAAQ7F,GAAGvB,WACpBiI,EAAQb,EAAQ7F,GAAGtJ,cAAciQ,kBACvCjC,EAAAA,EAAIC,MAAM,OAAQb,GAClBhB,EAAqByD,GACrB,MAAMK,EAAYf,EAAQ7F,GAAGxB,cAC7BkG,EAAAA,EAAIC,MAAM,WAAYiC,GACtB,IAAIvC,EAAmB,EACnBH,EAAgB,EAChB2C,EAAS,EACTC,EAAgB,EAChB9C,EAAU,GAAKmC,EACflC,EAAU,GACd6C,EAAgB,GAChB,IAAIC,EAAgB,EAChBC,GAAc,EAClBJ,EAAUK,SAAQ,SAAShI,GACzB,MAQMiI,EAAgBpE,EAA6ByD,EAR/B,CAClB9B,OAAQsC,EACRvH,MAAOP,EACPA,QAAS8H,EACTlG,MAAO,IACP2C,QAAS,GACTE,UAAWW,GAEwD/C,GACrEoD,EAAAA,EAAIC,MAAM,4BAA6BuC,GACvC7C,EAAmB/G,KAAKmG,IAAIY,EAAkB6C,EAAgB,GAChE,IACA,IAAI/C,EAAgB,EAChBC,EAAqB,EACzBM,EAAAA,EAAIC,MAAM,eAAgBb,EAAO9O,QACjC,IAAK,MAAO+H,EAAGoC,KAAS2E,EAAOjE,UAAW,CACxC,MAAM2E,EAAW,CACfC,OAAQ1H,EACRyC,MAAOL,EACPF,QAASE,EAAKF,QACd4B,MAAO,IACP2C,QAAS,GACTE,UAAWQ,GAEPW,EAAa/B,EAA6ByD,EAAK/B,EAAUlD,GAC/DoD,EAAAA,EAAIC,MAAM,yBAA0BE,GACpCX,EAAgB5G,KAAKmG,IAAIS,EAAeW,EAAa,IACrDV,EAAgB7G,KAAKmG,IAAIU,EAAehF,EAAKE,OAAOrK,QACpD,IAAImS,EAAyB,EAC7B,IAAK,IAAI3E,EAAI,EAAGA,EAAIrD,EAAKE,OAAOrK,OAAQwN,IAAK,CAC3C,MACM6C,EAAY,CAChB7F,MAFYL,EAAKE,OAAOmD,GAGxBvD,QAASE,EAAKF,QACdwF,OAAQtF,EAAKF,QACb4B,MAAO,IACP2C,QAAS,GACTE,UAAW,IAEbyD,GAA0BrE,EAA6ByD,EAAKlB,EAAW/D,EACzE,CACA8C,EAAqB9G,KAAKmG,IAAIW,EAAoB+C,EACpD,CACAzC,EAAAA,EAAIC,MAAM,+BAAgCN,GAC1CK,EAAAA,EAAIC,MAAM,4BAA6BT,GACnC0C,GAAaA,EAAU5R,OAAS,EAClC4R,EAAUK,SAAShI,IACjB,MAAMmI,EAAkBtD,EAAOuD,QAAQlI,GAASA,EAAKF,UAAYA,IAC3DqI,EAAc,CAClB7C,OAAQsC,EACRvH,MAAOP,EACPA,QAAS8H,EACTlG,MAAO,IAAMvD,KAAKmG,IAAI2D,EAAgBpS,OAAQ,GAAK,GACnDwO,QAAS,GACTE,UAAWW,GAEbK,EAAAA,EAAIC,MAAM,cAAe2C,GACzB,MAAMC,EAAqBhB,EAAIrF,OAAO,KAChCuB,EAAOK,EAAiByE,EAAoBD,EAAaP,EAAezF,GAC9EoD,EAAAA,EAAIC,MAAM,qBAAsBlC,GAChC8E,EAAmBpG,KAAK,YAAa,aAAFtG,OAAemJ,EAAO,MAAAnJ,OAhE7C,GAgE+D,MAC3EoJ,GAAWI,EAAmB,GAC1B+C,EAAgBpS,OAAS,GAC3B4O,EACE2C,EACAa,EACAL,EACA/C,EACAC,EACAC,EACA5C,EACA6C,EACAC,EACAC,GACA,GAGJL,GAAW,IAAM1G,KAAKmG,IAAI2D,EAAgBpS,OAAQ,GAClDiP,EAlFY,GAmFZ8C,GAAe,KAGjBC,GAAc,EACdpD,EACE2C,EACAzC,EACAiD,EACA/C,EACAC,EACAC,EACA5C,EACA6C,EACAC,EACAC,GACA,IAGJ,MAAMmD,EAAMjB,EAAI9D,OAAOa,UACvBoB,EAAAA,EAAIC,MAAM,SAAU6C,GAChBd,GACFH,EAAIrF,OAAO,QAAQ/G,KAAKuM,GAAOvF,KAAK,IAAKqG,EAAI3G,MAAQ,EAAIsF,GAAahF,KAAK,YAAa,OAAOA,KAAK,cAAe,QAAQA,KAAK,IAAK,IAEvI0F,EAASG,EAAc3C,EAAmBH,EAAgB,IAAMA,EAAgB,IAC5DqC,EAAIrF,OAAO,KAAKC,KAAK,QAAS,eACtCD,OAAO,QAAQC,KAAK,KAAMgF,GAAahF,KAAK,KAAM0F,GAAQ1F,KAAK,KAAMqG,EAAI3G,MAAQ,EAAIsF,GAAahF,KAAK,KAAM0F,GAAQ1F,KAAK,eAAgB,GAAGA,KAAK,SAAU,SAASA,KAAK,aAAc,oBACpMsG,EAAAA,EAAAA,QACE,EACAlB,EACmD,QADhDR,EACsB,OAAvBxB,EAAKjD,EAAK2D,eAAoB,EAASV,EAAGf,eAAO,IAAAuC,EAAAA,EAAK,GACD,QADGC,EACjC,OAAvBC,EAAK3E,EAAK2D,eAAoB,EAASgB,EAAGyB,mBAAW,IAAA1B,GAAAA,EAE3D,GA8IEtR,OAAQoJ,EACR6J,OA7BiB1O,GAAO,6CAAA4B,OAhDL5B,KACnB,IAAI2N,EAAY,GAChB,IAAK,IAAI7J,EAAI,EAAGA,EAAI9D,EAAQ2O,kBAAmB7K,IAC7C9D,EAAQ,YAAc8D,GAAK9D,EAAQ,YAAc8D,IAAM9D,EAAQ,YAAc8D,IACzE8K,EAAAA,EAAAA,GAAO5O,EAAQ,YAAc8D,IAC/B9D,EAAQ,YAAc8D,IAAK+K,EAAAA,EAAAA,GAAQ7O,EAAQ,YAAc8D,GAAI,IAE7D9D,EAAQ,YAAc8D,IAAKgL,EAAAA,EAAAA,GAAO9O,EAAQ,YAAc8D,GAAI,IAGhE,IAAK,IAAIA,EAAI,EAAGA,EAAI9D,EAAQ2O,kBAAmB7K,IAAK,CAClD,MAAMiL,EAAK,IAAM,GAAK,EAAIjL,GAC1B6J,GAAa,kBAAJ/L,OACEkC,EAAI,EAAC,oBAAAlC,OAAmBkC,EAAI,EAAC,oBAAAlC,OAAmBkC,EAAI,EAAC,sBAAAlC,OAAqBkC,EAAI,EAAC,0BAAAlC,OAChF5B,EAAQ,SAAW8D,GAAE,2BAAAlC,OAEpBkC,EAAI,EAAC,wBAAAlC,OACP5B,EAAQ,cAAgB8D,GAAE,6BAAAlC,OAEtBkC,EAAI,EAAC,6CAAAlC,OAEP5B,EAAQ,cAAgB8D,GAAE,gCAAAlC,OAErBkC,EAAI,EAAC,qBAAAlC,OACT5B,EAAQ,SAAW8D,GAAE,8BAAAlC,OAEnBkC,EAAI,EAAC,2BAAAlC,OACDmN,EAAE,2BAAAnN,OAETkC,EAAI,EAAC,2BAAAlC,OACJ5B,EAAQ,YAAc8D,GAAE,+EAAAlC,OAKxB5B,EAAQ,cAAgB8D,GAAE,yJAUxC,CACA,OAAO6J,CAAS,EAMdqB,CAAYhP,GAAQ,mFAAA4B,OAEZ5B,EAAQiP,KAAI,8CAAArN,OAGZ5B,EAAQkP,gBAAe,4N","sources":["../../node_modules/mermaid/dist/timeline-definition-fea2a41d.js"],"sourcesContent":["import { L as commonDb, v as clear$1, c as getConfig, l as log, o as setupGraphViewbox } from \"./mermaid-f47111a7.js\";\nimport { select, arc } from \"d3\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [6, 8, 10, 11, 12, 14, 16, 17, 20, 21], $V1 = [1, 9], $V2 = [1, 10], $V3 = [1, 11], $V4 = [1, 12], $V5 = [1, 13], $V6 = [1, 16], $V7 = [1, 17];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"timeline\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"SPACE\": 8, \"statement\": 9, \"NEWLINE\": 10, \"title\": 11, \"acc_title\": 12, \"acc_title_value\": 13, \"acc_descr\": 14, \"acc_descr_value\": 15, \"acc_descr_multiline_value\": 16, \"section\": 17, \"period_statement\": 18, \"event_statement\": 19, \"period\": 20, \"event\": 21, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"timeline\", 6: \"EOF\", 8: \"SPACE\", 10: \"NEWLINE\", 11: \"title\", 12: \"acc_title\", 13: \"acc_title_value\", 14: \"acc_descr\", 15: \"acc_descr_value\", 16: \"acc_descr_multiline_value\", 17: \"section\", 20: \"period\", 21: \"event\" },\n    productions_: [0, [3, 3], [5, 0], [5, 2], [7, 2], [7, 1], [7, 1], [7, 1], [9, 1], [9, 2], [9, 2], [9, 1], [9, 1], [9, 1], [9, 1], [18, 1], [19, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 1:\n          return $$[$0 - 1];\n        case 2:\n          this.$ = [];\n          break;\n        case 3:\n          $$[$0 - 1].push($$[$0]);\n          this.$ = $$[$0 - 1];\n          break;\n        case 4:\n        case 5:\n          this.$ = $$[$0];\n          break;\n        case 6:\n        case 7:\n          this.$ = [];\n          break;\n        case 8:\n          yy.getCommonDb().setDiagramTitle($$[$0].substr(6));\n          this.$ = $$[$0].substr(6);\n          break;\n        case 9:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccTitle(this.$);\n          break;\n        case 10:\n        case 11:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccDescription(this.$);\n          break;\n        case 12:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n        case 15:\n          yy.addTask($$[$0], 0, \"\");\n          this.$ = $$[$0];\n          break;\n        case 16:\n          yy.addEvent($$[$0].substr(2));\n          this.$ = $$[$0];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: [1, 6], 9: 7, 10: [1, 8], 11: $V1, 12: $V2, 14: $V3, 16: $V4, 17: $V5, 18: 14, 19: 15, 20: $V6, 21: $V7 }, o($V0, [2, 7], { 1: [2, 1] }), o($V0, [2, 3]), { 9: 18, 11: $V1, 12: $V2, 14: $V3, 16: $V4, 17: $V5, 18: 14, 19: 15, 20: $V6, 21: $V7 }, o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 8]), { 13: [1, 19] }, { 15: [1, 20] }, o($V0, [2, 11]), o($V0, [2, 12]), o($V0, [2, 13]), o($V0, [2, 14]), o($V0, [2, 15]), o($V0, [2, 16]), o($V0, [2, 4]), o($V0, [2, 9]), o($V0, [2, 10])],\n    defaultActions: {},\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            return 10;\n          case 3:\n            break;\n          case 4:\n            break;\n          case 5:\n            return 4;\n          case 6:\n            return 11;\n          case 7:\n            this.begin(\"acc_title\");\n            return 12;\n          case 8:\n            this.popState();\n            return \"acc_title_value\";\n          case 9:\n            this.begin(\"acc_descr\");\n            return 14;\n          case 10:\n            this.popState();\n            return \"acc_descr_value\";\n          case 11:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 12:\n            this.popState();\n            break;\n          case 13:\n            return \"acc_descr_multiline_value\";\n          case 14:\n            return 17;\n          case 15:\n            return 21;\n          case 16:\n            return 20;\n          case 17:\n            return 6;\n          case 18:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:timeline\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?::\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"acc_descr_multiline\": { \"rules\": [12, 13], \"inclusive\": false }, \"acc_descr\": { \"rules\": [10], \"inclusive\": false }, \"acc_title\": { \"rules\": [8], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet currentSection = \"\";\nlet currentTaskId = 0;\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\nconst getCommonDb = () => commonDb;\nconst clear = function() {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = \"\";\n  rawTasks.length = 0;\n  clear$1();\n};\nconst addSection = function(txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\nconst getSections = function() {\n  return sections;\n};\nconst getTasks = function() {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n  tasks.push(...rawTasks);\n  return tasks;\n};\nconst addTask = function(period, length, event) {\n  const rawTask = {\n    id: currentTaskId++,\n    section: currentSection,\n    type: currentSection,\n    task: period,\n    score: length ? length : 0,\n    //if event is defined, then add it the events array\n    events: event ? [event] : []\n  };\n  rawTasks.push(rawTask);\n};\nconst addEvent = function(event) {\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\n  currentTask.events.push(event);\n};\nconst addTaskOrg = function(descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: []\n  };\n  tasks.push(newTask);\n};\nconst compileTasks = function() {\n  const compileTask = function(pos) {\n    return rawTasks[pos].processed;\n  };\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\nconst timelineDb = {\n  clear,\n  getCommonDb,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  addEvent\n};\nconst db = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  addEvent,\n  addSection,\n  addTask,\n  addTaskOrg,\n  clear,\n  default: timelineDb,\n  getCommonDb,\n  getSections,\n  getTasks\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst MAX_SECTIONS = 12;\nconst drawRect = function(elem, rectData) {\n  const rectElem = elem.append(\"rect\");\n  rectElem.attr(\"x\", rectData.x);\n  rectElem.attr(\"y\", rectData.y);\n  rectElem.attr(\"fill\", rectData.fill);\n  rectElem.attr(\"stroke\", rectData.stroke);\n  rectElem.attr(\"width\", rectData.width);\n  rectElem.attr(\"height\", rectData.height);\n  rectElem.attr(\"rx\", rectData.rx);\n  rectElem.attr(\"ry\", rectData.ry);\n  if (rectData.class !== void 0) {\n    rectElem.attr(\"class\", rectData.class);\n  }\n  return rectElem;\n};\nconst drawFace = function(element, faceData) {\n  const radius = 15;\n  const circleElement = element.append(\"circle\").attr(\"cx\", faceData.cx).attr(\"cy\", faceData.cy).attr(\"class\", \"face\").attr(\"r\", radius).attr(\"stroke-width\", 2).attr(\"overflow\", \"visible\");\n  const face = element.append(\"g\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx - radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx + radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  function smile(face2) {\n    const arc$1 = arc().startAngle(Math.PI / 2).endAngle(3 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 2) + \")\");\n  }\n  function sad(face2) {\n    const arc$1 = arc().startAngle(3 * Math.PI / 2).endAngle(5 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 7) + \")\");\n  }\n  function ambivalent(face2) {\n    face2.append(\"line\").attr(\"class\", \"mouth\").attr(\"stroke\", 2).attr(\"x1\", faceData.cx - 5).attr(\"y1\", faceData.cy + 7).attr(\"x2\", faceData.cx + 5).attr(\"y2\", faceData.cy + 7).attr(\"class\", \"mouth\").attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#666\");\n  }\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n  return circleElement;\n};\nconst drawCircle = function(element, circleData) {\n  const circleElement = element.append(\"circle\");\n  circleElement.attr(\"cx\", circleData.cx);\n  circleElement.attr(\"cy\", circleData.cy);\n  circleElement.attr(\"class\", \"actor-\" + circleData.pos);\n  circleElement.attr(\"fill\", circleData.fill);\n  circleElement.attr(\"stroke\", circleData.stroke);\n  circleElement.attr(\"r\", circleData.r);\n  if (circleElement.class !== void 0) {\n    circleElement.attr(\"class\", circleElement.class);\n  }\n  if (circleData.title !== void 0) {\n    circleElement.append(\"title\").text(circleData.title);\n  }\n  return circleElement;\n};\nconst drawText = function(elem, textData) {\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.text(nText);\n  return textElem;\n};\nconst drawLabel = function(elem, txtObject) {\n  function genPoints(x, y, width, height, cut) {\n    return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n  }\n  const polygon = elem.append(\"polygon\");\n  polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr(\"class\", \"labelBox\");\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\nconst drawSection = function(elem, section, conf) {\n  const g = elem.append(\"g\");\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"journey-section section-type-\" + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"journey-section section-type-\" + section.num },\n    conf,\n    section.colour\n  );\n};\nlet taskCount = -1;\nconst drawTask = function(elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append(\"g\");\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append(\"line\").attr(\"id\", \"task\" + taskCount).attr(\"x1\", center).attr(\"y1\", task.y).attr(\"x2\", center).attr(\"y2\", maxHeight).attr(\"class\", \"task-line\").attr(\"stroke-width\", \"1px\").attr(\"stroke-dasharray\", \"4 2\").attr(\"stroke\", \"#666\");\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score\n  });\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"task task-type-\" + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  task.x + 14;\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"task\" },\n    conf,\n    task.colour\n  );\n};\nconst drawBackgroundRect = function(elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: \"rect\"\n  });\n  rectElem.lower();\n};\nconst getTextObj = function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    \"text-anchor\": \"start\",\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0\n  };\n};\nconst getNoteRect = function() {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: \"start\",\n    height: 100,\n    rx: 0,\n    ry: 0\n  };\n};\nconst _drawTextCandidateFunc = function() {\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"font-color\", colour).style(\"text-anchor\", \"middle\").text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - taskFontSize * (lines.length - 1) / 2;\n      const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).attr(\"fill\", colour).style(\"text-anchor\", \"middle\").style(\"font-size\", taskFontSize).style(\"font-family\", taskFontFamily);\n      text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append(\"switch\");\n    const f = body.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height).attr(\"position\", \"fixed\");\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").attr(\"class\", \"label\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n  return function(conf) {\n    return conf.textPlacement === \"fo\" ? byFo : conf.textPlacement === \"old\" ? byText : byTspan;\n  };\n}();\nconst initGraphics = function(graphics) {\n  graphics.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 5).attr(\"refY\", 2).attr(\"markerWidth\", 6).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\n};\nfunction wrap(text, width) {\n  text.each(function() {\n    var text2 = select(this), words = text2.text().split(/(\\s+|<br>)/).reverse(), word, line = [], lineHeight = 1.1, y = text2.attr(\"y\"), dy = parseFloat(text2.attr(\"dy\")), tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(\" \").trim());\n      if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\n        line.pop();\n        tspan.text(line.join(\" \").trim());\n        if (word === \"<br>\") {\n          line = [\"\"];\n        } else {\n          line = [word];\n        }\n        tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\n      }\n    }\n  });\n}\nconst drawNode = function(elem, node, fullSection, conf) {\n  const section = fullSection % MAX_SECTIONS - 1;\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  nodeElem.attr(\n    \"class\",\n    (node.class ? node.class + \" \" : \"\") + \"timeline-node \" + (\"section-\" + section)\n  );\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.height = Math.max(node.height, node.maxHeight);\n  node.width = node.width + 2 * node.padding;\n  textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\n  defaultBkg(bkgElem, node, section);\n  return node;\n};\nconst getVirtualNodeHeight = function(elem, node, conf) {\n  const textElem = elem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  textElem.remove();\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n};\nconst defaultBkg = function(elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\n    \"d\",\n    `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`\n  );\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst svgDraw = {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n  drawNode,\n  getVirtualNodeHeight\n};\nconst draw = function(text, id, version, diagObj) {\n  var _a, _b;\n  const conf = getConfig();\n  const LEFT_MARGIN = conf.leftMargin ?? 50;\n  log.debug(\"timeline\", diagObj.db);\n  const securityLevel = conf.securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(\"#\" + id);\n  svg.append(\"g\");\n  const tasks2 = diagObj.db.getTasks();\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\n  log.debug(\"task\", tasks2);\n  svgDraw.initGraphics(svg);\n  const sections2 = diagObj.db.getSections();\n  log.debug(\"sections\", sections2);\n  let maxSectionHeight = 0;\n  let maxTaskHeight = 0;\n  let depthY = 0;\n  let sectionBeginY = 0;\n  let masterX = 50 + LEFT_MARGIN;\n  let masterY = 50;\n  sectionBeginY = 50;\n  let sectionNumber = 0;\n  let hasSections = true;\n  sections2.forEach(function(section) {\n    const sectionNode = {\n      number: sectionNumber,\n      descr: section,\n      section: sectionNumber,\n      width: 150,\n      padding: 20,\n      maxHeight: maxSectionHeight\n    };\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n    log.debug(\"sectionHeight before draw\", sectionHeight);\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n  });\n  let maxEventCount = 0;\n  let maxEventLineLength = 0;\n  log.debug(\"tasks.length\", tasks2.length);\n  for (const [i, task] of tasks2.entries()) {\n    const taskNode = {\n      number: i,\n      descr: task,\n      section: task.section,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n    log.debug(\"taskHeight before draw\", taskHeight);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n    maxEventCount = Math.max(maxEventCount, task.events.length);\n    let maxEventLineLengthTemp = 0;\n    for (let j = 0; j < task.events.length; j++) {\n      const event = task.events[j];\n      const eventNode = {\n        descr: event,\n        section: task.section,\n        number: task.section,\n        width: 150,\n        padding: 20,\n        maxHeight: 50\n      };\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n    }\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n  }\n  log.debug(\"maxSectionHeight before draw\", maxSectionHeight);\n  log.debug(\"maxTaskHeight before draw\", maxTaskHeight);\n  if (sections2 && sections2.length > 0) {\n    sections2.forEach((section) => {\n      const tasksForSection = tasks2.filter((task) => task.section === section);\n      const sectionNode = {\n        number: sectionNumber,\n        descr: section,\n        section: sectionNumber,\n        width: 200 * Math.max(tasksForSection.length, 1) - 50,\n        padding: 20,\n        maxHeight: maxSectionHeight\n      };\n      log.debug(\"sectionNode\", sectionNode);\n      const sectionNodeWrapper = svg.append(\"g\");\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n      log.debug(\"sectionNode output\", node);\n      sectionNodeWrapper.attr(\"transform\", `translate(${masterX}, ${sectionBeginY})`);\n      masterY += maxSectionHeight + 50;\n      if (tasksForSection.length > 0) {\n        drawTasks(\n          svg,\n          tasksForSection,\n          sectionNumber,\n          masterX,\n          masterY,\n          maxTaskHeight,\n          conf,\n          maxEventCount,\n          maxEventLineLength,\n          maxSectionHeight,\n          false\n        );\n      }\n      masterX += 200 * Math.max(tasksForSection.length, 1);\n      masterY = sectionBeginY;\n      sectionNumber++;\n    });\n  } else {\n    hasSections = false;\n    drawTasks(\n      svg,\n      tasks2,\n      sectionNumber,\n      masterX,\n      masterY,\n      maxTaskHeight,\n      conf,\n      maxEventCount,\n      maxEventLineLength,\n      maxSectionHeight,\n      true\n    );\n  }\n  const box = svg.node().getBBox();\n  log.debug(\"bounds\", box);\n  if (title) {\n    svg.append(\"text\").text(title).attr(\"x\", box.width / 2 - LEFT_MARGIN).attr(\"font-size\", \"4ex\").attr(\"font-weight\", \"bold\").attr(\"y\", 20);\n  }\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n  const lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\n  lineWrapper.append(\"line\").attr(\"x1\", LEFT_MARGIN).attr(\"y1\", depthY).attr(\"x2\", box.width + 3 * LEFT_MARGIN).attr(\"y2\", depthY).attr(\"stroke-width\", 4).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\");\n  setupGraphViewbox(\n    void 0,\n    svg,\n    ((_a = conf.timeline) == null ? void 0 : _a.padding) ?? 50,\n    ((_b = conf.timeline) == null ? void 0 : _b.useMaxWidth) ?? false\n  );\n};\nconst drawTasks = function(diagram2, tasks2, sectionColor, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, isWithoutSections) {\n  var _a;\n  for (const task of tasks2) {\n    const taskNode = {\n      descr: task.task,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    log.debug(\"taskNode\", taskNode);\n    const taskWrapper = diagram2.append(\"g\").attr(\"class\", \"taskWrapper\");\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n    const taskHeight = node.height;\n    log.debug(\"taskHeight after draw\", taskHeight);\n    taskWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n    if (task.events) {\n      const lineWrapper = diagram2.append(\"g\").attr(\"class\", \"lineWrapper\");\n      let lineLength = maxTaskHeight;\n      masterY += 100;\n      lineLength = lineLength + drawEvents(diagram2, task.events, sectionColor, masterX, masterY, conf);\n      masterY -= 100;\n      lineWrapper.append(\"line\").attr(\"x1\", masterX + 190 / 2).attr(\"y1\", masterY + maxTaskHeight).attr(\"x2\", masterX + 190 / 2).attr(\n        \"y2\",\n        masterY + maxTaskHeight + (isWithoutSections ? maxTaskHeight : maxSectionHeight) + maxEventLineLength + 120\n      ).attr(\"stroke-width\", 2).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\").attr(\"stroke-dasharray\", \"5,5\");\n    }\n    masterX = masterX + 200;\n    if (isWithoutSections && !((_a = conf.timeline) == null ? void 0 : _a.disableMulticolor)) {\n      sectionColor++;\n    }\n  }\n  masterY = masterY - 10;\n};\nconst drawEvents = function(diagram2, events, sectionColor, masterX, masterY, conf) {\n  let maxEventHeight = 0;\n  const eventBeginY = masterY;\n  masterY = masterY + 100;\n  for (const event of events) {\n    const eventNode = {\n      descr: event,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: 50\n    };\n    log.debug(\"eventNode\", eventNode);\n    const eventWrapper = diagram2.append(\"g\").attr(\"class\", \"eventWrapper\");\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n    const eventHeight = node.height;\n    maxEventHeight = maxEventHeight + eventHeight;\n    eventWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    masterY = masterY + 10 + eventHeight;\n  }\n  masterY = eventBeginY;\n  return maxEventHeight;\n};\nconst renderer = {\n  setConf: () => {\n  },\n  draw\n};\nconst genSections = (options) => {\n  let sections2 = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections2 += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options[\"cScaleLabel\" + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections2;\n};\nconst getStyles = (options) => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","push","getCommonDb","setDiagramTitle","substr","trim","setAccTitle","setAccDescription","addSection","addTask","addEvent","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","lex","token","pop","Array","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","currentSection","currentTaskId","sections","tasks","rawTasks","commonDb","clear","clear$1","txt","getSections","getTasks","allItemsProcessed","compileTasks","iterationCount","period","event","rawTask","id","section","type","task","score","events","find","addTaskOrg","descr","newTask","description","classes","allProcessed","entries","processed","timelineDb","db","freeze","defineProperty","__proto__","default","Symbol","toStringTag","value","byText","content","g","x","y","width","height","textAttrs","colour","_setTextAttrs","append","attr","style","byTspan","conf","taskFontSize","taskFontFamily","dy","byFo","body","toText","fromTextAttrsDict","key","wrap","each","word","text2","select","words","reverse","parseFloat","tspan","j","node","getComputedTextLength","lineHeight","defaultBkg","elem","svgDraw","graphics","fullSection","nodeElem","class","bkgElem","textElem","bbox","getBBox","fontSize","padding","max","maxHeight","remove","drawTasks","diagram2","tasks2","sectionColor","masterX","masterY","maxTaskHeight","maxEventCount","maxEventLineLength","maxSectionHeight","isWithoutSections","_a","taskNode","number","log","debug","taskWrapper","taskHeight","lineWrapper","lineLength","drawEvents","timeline","disableMulticolor","maxEventHeight","eventBeginY","eventNode","eventWrapper","eventHeight","diagram","renderer","setConf","draw","version","diagObj","_conf$leftMargin","_ref","_ref2","_b","getConfig","LEFT_MARGIN","leftMargin","securityLevel","sandboxElement","svg","nodes","contentDocument","title","getDiagramTitle","sections2","depthY","sectionBeginY","sectionNumber","hasSections","forEach","sectionHeight","maxEventLineLengthTemp","tasksForSection","filter","sectionNode","sectionNodeWrapper","box","setupGraphViewbox","useMaxWidth","styles","THEME_COLOR_LIMIT","isDark","lighten","darken","sw","genSections","git0","gitBranchLabel0"],"sourceRoot":""}