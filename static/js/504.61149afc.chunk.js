"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[504],{4504:(t,e,c)=>{c.d(e,{diagram:()=>z});var n=c(2958),a=c(8683),r=(c(193),c(9982),c(5350),function(){var t=function(t,e,c,n){for(c=c||{},n=t.length;n--;c[t[n]]=e);return c},e=[1,3],c=[1,6],n=[1,4],a=[1,5],r=[2,5],i=[1,12],o=[5,7,13,19,21,23,24,26,28,31,37,40,47],s=[7,13,19,21,23,24,26,28,31,37,40],l=[7,12,13,19,21,23,24,26,28,31,37,40],h=[7,13,47],m=[1,42],u=[1,41],y=[7,13,29,32,35,38,47],p=[1,55],b=[1,56],g=[1,57],d=[7,13,32,35,42,47],f={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,ID:46,";":47,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",46:"ID",47:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,7],[18,7],[18,5],[18,5],[18,5],[18,7],[18,7],[18,7],[18,7],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[41,0],[41,1],[39,1],[39,1],[39,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:function(t,e,c,n,a,r,i){var o=r.length-1;switch(a){case 2:return r[o];case 3:return r[o-1];case 4:return n.setDirection(r[o-3]),r[o-1];case 6:n.setOptions(r[o-1]),this.$=r[o];break;case 7:r[o-1]+=r[o],this.$=r[o-1];break;case 9:this.$=[];break;case 10:r[o-1].push(r[o]),this.$=r[o-1];break;case 11:this.$=r[o-1];break;case 16:this.$=r[o].trim(),n.setAccTitle(this.$);break;case 17:case 18:this.$=r[o].trim(),n.setAccDescription(this.$);break;case 19:n.addSection(r[o].substr(8)),this.$=r[o].substr(8);break;case 21:n.checkout(r[o]);break;case 22:n.branch(r[o]);break;case 23:n.branch(r[o-2],r[o]);break;case 24:n.cherryPick(r[o],"",void 0);break;case 25:n.cherryPick(r[o-2],"",void 0,r[o]);break;case 26:n.cherryPick(r[o-2],"",r[o]);break;case 27:n.cherryPick(r[o-4],"",r[o],r[o-2]);break;case 28:n.cherryPick(r[o-4],"",r[o-2],r[o]);break;case 29:n.cherryPick(r[o],"",r[o-2]);break;case 30:n.cherryPick(r[o],"","");break;case 31:n.cherryPick(r[o-2],"","");break;case 32:n.cherryPick(r[o-4],"","",r[o-2]);break;case 33:n.cherryPick(r[o-4],"","",r[o]);break;case 34:n.cherryPick(r[o-2],"",r[o-4],r[o]);break;case 35:n.cherryPick(r[o-2],"","",r[o]);break;case 36:n.merge(r[o],"","","");break;case 37:n.merge(r[o-2],r[o],"","");break;case 38:n.merge(r[o-2],"",r[o],"");break;case 39:n.merge(r[o-2],"","",r[o]);break;case 40:n.merge(r[o-4],r[o],"",r[o-2]);break;case 41:n.merge(r[o-4],"",r[o],r[o-2]);break;case 42:n.merge(r[o-4],"",r[o-2],r[o]);break;case 43:n.merge(r[o-4],r[o-2],r[o],"");break;case 44:n.merge(r[o-4],r[o-2],"",r[o]);break;case 45:n.merge(r[o-4],r[o],r[o-2],"");break;case 46:n.merge(r[o-6],r[o-4],r[o-2],r[o]);break;case 47:n.merge(r[o-6],r[o],r[o-4],r[o-2]);break;case 48:n.merge(r[o-6],r[o-4],r[o],r[o-2]);break;case 49:n.merge(r[o-6],r[o-2],r[o-4],r[o]);break;case 50:n.merge(r[o-6],r[o],r[o-2],r[o-4]);break;case 51:n.merge(r[o-6],r[o-2],r[o],r[o-4]);break;case 52:n.commit(r[o]);break;case 53:n.commit("","",n.commitType.NORMAL,r[o]);break;case 54:n.commit("","",r[o],"");break;case 55:n.commit("","",r[o],r[o-2]);break;case 56:n.commit("","",r[o-2],r[o]);break;case 57:n.commit("",r[o],n.commitType.NORMAL,"");break;case 58:n.commit("",r[o-2],n.commitType.NORMAL,r[o]);break;case 59:n.commit("",r[o],n.commitType.NORMAL,r[o-2]);break;case 60:n.commit("",r[o-2],r[o],"");break;case 61:n.commit("",r[o],r[o-2],"");break;case 62:n.commit("",r[o-4],r[o-2],r[o]);break;case 63:n.commit("",r[o-4],r[o],r[o-2]);break;case 64:n.commit("",r[o-2],r[o-4],r[o]);break;case 65:n.commit("",r[o],r[o-4],r[o-2]);break;case 66:n.commit("",r[o],r[o-2],r[o-4]);break;case 67:n.commit("",r[o-2],r[o],r[o-4]);break;case 68:n.commit(r[o],"",n.commitType.NORMAL,"");break;case 69:n.commit(r[o],"",n.commitType.NORMAL,r[o-2]);break;case 70:n.commit(r[o-2],"",n.commitType.NORMAL,r[o]);break;case 71:n.commit(r[o-2],"",r[o],"");break;case 72:n.commit(r[o],"",r[o-2],"");break;case 73:n.commit(r[o],r[o-2],n.commitType.NORMAL,"");break;case 74:n.commit(r[o-2],r[o],n.commitType.NORMAL,"");break;case 75:n.commit(r[o-4],"",r[o-2],r[o]);break;case 76:n.commit(r[o-4],"",r[o],r[o-2]);break;case 77:n.commit(r[o-2],"",r[o-4],r[o]);break;case 78:n.commit(r[o],"",r[o-4],r[o-2]);break;case 79:n.commit(r[o],"",r[o-2],r[o-4]);break;case 80:n.commit(r[o-2],"",r[o],r[o-4]);break;case 81:n.commit(r[o-4],r[o],r[o-2],"");break;case 82:n.commit(r[o-4],r[o-2],r[o],"");break;case 83:n.commit(r[o-2],r[o],r[o-4],"");break;case 84:n.commit(r[o],r[o-2],r[o-4],"");break;case 85:n.commit(r[o],r[o-4],r[o-2],"");break;case 86:n.commit(r[o-2],r[o-4],r[o],"");break;case 87:n.commit(r[o-4],r[o],n.commitType.NORMAL,r[o-2]);break;case 88:n.commit(r[o-4],r[o-2],n.commitType.NORMAL,r[o]);break;case 89:n.commit(r[o-2],r[o],n.commitType.NORMAL,r[o-4]);break;case 90:n.commit(r[o],r[o-2],n.commitType.NORMAL,r[o-4]);break;case 91:n.commit(r[o],r[o-4],n.commitType.NORMAL,r[o-2]);break;case 92:n.commit(r[o-2],r[o-4],n.commitType.NORMAL,r[o]);break;case 93:n.commit(r[o-6],r[o-4],r[o-2],r[o]);break;case 94:n.commit(r[o-6],r[o-4],r[o],r[o-2]);break;case 95:n.commit(r[o-6],r[o-2],r[o-4],r[o]);break;case 96:n.commit(r[o-6],r[o],r[o-4],r[o-2]);break;case 97:n.commit(r[o-6],r[o-2],r[o],r[o-4]);break;case 98:n.commit(r[o-6],r[o],r[o-2],r[o-4]);break;case 99:n.commit(r[o-4],r[o-6],r[o-2],r[o]);break;case 100:n.commit(r[o-4],r[o-6],r[o],r[o-2]);break;case 101:n.commit(r[o-2],r[o-6],r[o-4],r[o]);break;case 102:n.commit(r[o],r[o-6],r[o-4],r[o-2]);break;case 103:n.commit(r[o-2],r[o-6],r[o],r[o-4]);break;case 104:n.commit(r[o],r[o-6],r[o-2],r[o-4]);break;case 105:n.commit(r[o],r[o-4],r[o-2],r[o-6]);break;case 106:n.commit(r[o-2],r[o-4],r[o],r[o-6]);break;case 107:n.commit(r[o],r[o-2],r[o-4],r[o-6]);break;case 108:n.commit(r[o-2],r[o],r[o-4],r[o-6]);break;case 109:n.commit(r[o-4],r[o-2],r[o],r[o-6]);break;case 110:n.commit(r[o-4],r[o],r[o-2],r[o-6]);break;case 111:n.commit(r[o-2],r[o-4],r[o-6],r[o]);break;case 112:n.commit(r[o],r[o-4],r[o-6],r[o-2]);break;case 113:n.commit(r[o-2],r[o],r[o-6],r[o-4]);break;case 114:n.commit(r[o],r[o-2],r[o-6],r[o-4]);break;case 115:n.commit(r[o-4],r[o-2],r[o-6],r[o]);break;case 116:n.commit(r[o-4],r[o],r[o-6],r[o-2]);break;case 117:this.$="";break;case 118:this.$=r[o];break;case 119:this.$=n.commitType.NORMAL;break;case 120:this.$=n.commitType.REVERSE;break;case 121:this.$=n.commitType.HIGHLIGHT}},table:[{3:1,4:2,5:e,7:c,13:n,47:a},{1:[3]},{3:7,4:2,5:e,7:c,13:n,47:a},{6:8,7:r,8:[1,9],9:[1,10],10:11,13:i},t(o,[2,124]),t(o,[2,125]),t(o,[2,126]),{1:[2,1]},{7:[1,13]},{6:14,7:r,10:11,13:i},{8:[1,15]},t(s,[2,9],{11:16,12:[1,17]}),t(l,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:r,10:11,13:i},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],37:[1,33],40:[1,32]},t(l,[2,7]),{1:[2,3]},{7:[1,36]},t(s,[2,10]),{4:37,7:c,13:n,47:a},t(s,[2,12]),t(h,[2,13]),t(h,[2,14]),t(h,[2,15]),{20:[1,38]},{22:[1,39]},t(h,[2,18]),t(h,[2,19]),t(h,[2,20]),{27:40,33:m,46:u},t(h,[2,117],{41:43,32:[1,46],33:[1,48],35:[1,44],38:[1,45],42:[1,47]}),{27:49,33:m,46:u},{32:[1,50],35:[1,51]},{27:52,33:m,46:u},{1:[2,4]},t(s,[2,11]),t(h,[2,16]),t(h,[2,17]),t(h,[2,21]),t(y,[2,122]),t(y,[2,123]),t(h,[2,52]),{33:[1,53]},{39:54,43:p,44:b,45:g},{33:[1,58]},{33:[1,59]},t(h,[2,118]),t(h,[2,36],{32:[1,60],35:[1,62],38:[1,61]}),{33:[1,63]},{33:[1,64],36:[1,65]},t(h,[2,22],{29:[1,66]}),t(h,[2,53],{32:[1,68],38:[1,67],42:[1,69]}),t(h,[2,54],{32:[1,71],35:[1,70],42:[1,72]}),t(d,[2,119]),t(d,[2,120]),t(d,[2,121]),t(h,[2,57],{35:[1,73],38:[1,74],42:[1,75]}),t(h,[2,68],{32:[1,78],35:[1,76],38:[1,77]}),{33:[1,79]},{39:80,43:p,44:b,45:g},{33:[1,81]},t(h,[2,24],{34:[1,82],35:[1,83]}),{32:[1,84]},{32:[1,85]},{30:[1,86]},{39:87,43:p,44:b,45:g},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{33:[1,93]},{39:94,43:p,44:b,45:g},{33:[1,95]},{33:[1,96]},{39:97,43:p,44:b,45:g},{33:[1,98]},t(h,[2,37],{35:[1,100],38:[1,99]}),t(h,[2,38],{32:[1,102],35:[1,101]}),t(h,[2,39],{32:[1,103],38:[1,104]}),{33:[1,105]},{33:[1,106],36:[1,107]},{33:[1,108]},{33:[1,109]},t(h,[2,23]),t(h,[2,55],{32:[1,110],42:[1,111]}),t(h,[2,59],{38:[1,112],42:[1,113]}),t(h,[2,69],{32:[1,115],38:[1,114]}),t(h,[2,56],{32:[1,116],42:[1,117]}),t(h,[2,61],{35:[1,118],42:[1,119]}),t(h,[2,72],{32:[1,121],35:[1,120]}),t(h,[2,58],{38:[1,122],42:[1,123]}),t(h,[2,60],{35:[1,124],42:[1,125]}),t(h,[2,73],{35:[1,127],38:[1,126]}),t(h,[2,70],{32:[1,129],38:[1,128]}),t(h,[2,71],{32:[1,131],35:[1,130]}),t(h,[2,74],{35:[1,133],38:[1,132]}),{39:134,43:p,44:b,45:g},{33:[1,135]},{33:[1,136]},{33:[1,137]},{33:[1,138]},{39:139,43:p,44:b,45:g},t(h,[2,25],{35:[1,140]}),t(h,[2,26],{34:[1,141]}),t(h,[2,31],{34:[1,142]}),t(h,[2,29],{34:[1,143]}),t(h,[2,30],{34:[1,144]}),{33:[1,145]},{33:[1,146]},{39:147,43:p,44:b,45:g},{33:[1,148]},{39:149,43:p,44:b,45:g},{33:[1,150]},{33:[1,151]},{33:[1,152]},{33:[1,153]},{33:[1,154]},{33:[1,155]},{33:[1,156]},{39:157,43:p,44:b,45:g},{33:[1,158]},{33:[1,159]},{33:[1,160]},{39:161,43:p,44:b,45:g},{33:[1,162]},{39:163,43:p,44:b,45:g},{33:[1,164]},{33:[1,165]},{33:[1,166]},{39:167,43:p,44:b,45:g},{33:[1,168]},t(h,[2,43],{35:[1,169]}),t(h,[2,44],{38:[1,170]}),t(h,[2,42],{32:[1,171]}),t(h,[2,45],{35:[1,172]}),t(h,[2,40],{38:[1,173]}),t(h,[2,41],{32:[1,174]}),{33:[1,175],36:[1,176]},{33:[1,177]},{33:[1,178]},{33:[1,179]},{33:[1,180]},t(h,[2,66],{42:[1,181]}),t(h,[2,79],{32:[1,182]}),t(h,[2,67],{42:[1,183]}),t(h,[2,90],{38:[1,184]}),t(h,[2,80],{32:[1,185]}),t(h,[2,89],{38:[1,186]}),t(h,[2,65],{42:[1,187]}),t(h,[2,78],{32:[1,188]}),t(h,[2,64],{42:[1,189]}),t(h,[2,84],{35:[1,190]}),t(h,[2,77],{32:[1,191]}),t(h,[2,83],{35:[1,192]}),t(h,[2,63],{42:[1,193]}),t(h,[2,91],{38:[1,194]}),t(h,[2,62],{42:[1,195]}),t(h,[2,85],{35:[1,196]}),t(h,[2,86],{35:[1,197]}),t(h,[2,92],{38:[1,198]}),t(h,[2,76],{32:[1,199]}),t(h,[2,87],{38:[1,200]}),t(h,[2,75],{32:[1,201]}),t(h,[2,81],{35:[1,202]}),t(h,[2,82],{35:[1,203]}),t(h,[2,88],{38:[1,204]}),{33:[1,205]},{39:206,43:p,44:b,45:g},{33:[1,207]},{33:[1,208]},{39:209,43:p,44:b,45:g},{33:[1,210]},t(h,[2,27]),t(h,[2,32]),t(h,[2,28]),t(h,[2,33]),t(h,[2,34]),t(h,[2,35]),{33:[1,211]},{33:[1,212]},{33:[1,213]},{39:214,43:p,44:b,45:g},{33:[1,215]},{39:216,43:p,44:b,45:g},{33:[1,217]},{33:[1,218]},{33:[1,219]},{33:[1,220]},{33:[1,221]},{33:[1,222]},{33:[1,223]},{39:224,43:p,44:b,45:g},{33:[1,225]},{33:[1,226]},{33:[1,227]},{39:228,43:p,44:b,45:g},{33:[1,229]},{39:230,43:p,44:b,45:g},{33:[1,231]},{33:[1,232]},{33:[1,233]},{39:234,43:p,44:b,45:g},t(h,[2,46]),t(h,[2,48]),t(h,[2,47]),t(h,[2,49]),t(h,[2,51]),t(h,[2,50]),t(h,[2,107]),t(h,[2,108]),t(h,[2,105]),t(h,[2,106]),t(h,[2,110]),t(h,[2,109]),t(h,[2,114]),t(h,[2,113]),t(h,[2,112]),t(h,[2,111]),t(h,[2,116]),t(h,[2,115]),t(h,[2,104]),t(h,[2,103]),t(h,[2,102]),t(h,[2,101]),t(h,[2,99]),t(h,[2,100]),t(h,[2,98]),t(h,[2,97]),t(h,[2,96]),t(h,[2,95]),t(h,[2,93]),t(h,[2,94])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:function(t,e){if(!e.recoverable){var c=new Error(t);throw c.hash=e,c}this.trace(t)},parse:function(t){var e=this,c=[0],n=[],a=[null],r=[],i=this.table,o="",s=0,l=0,h=r.slice.call(arguments,1),m=Object.create(this.lexer),u={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(u.yy[y]=this.yy[y]);m.setInput(t,u.yy),u.yy.lexer=m,u.yy.parser=this,"undefined"==typeof m.yylloc&&(m.yylloc={});var p=m.yylloc;r.push(p);var b=m.options&&m.options.ranges;function g(){var t;return"number"!==typeof(t=n.pop()||m.lex()||1)&&(t instanceof Array&&(t=(n=t).pop()),t=e.symbols_[t]||t),t}"function"===typeof u.yy.parseError?this.parseError=u.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var d,f,k,x,_,w,T,E,L={};;){if(f=c[c.length-1],this.defaultActions[f]?k=this.defaultActions[f]:(null!==d&&"undefined"!=typeof d||(d=g()),k=i[f]&&i[f][d]),"undefined"===typeof k||!k.length||!k[0]){var v="";for(_ in E=[],i[f])this.terminals_[_]&&_>2&&E.push("'"+this.terminals_[_]+"'");v=m.showPosition?"Parse error on line "+(s+1)+":\n"+m.showPosition()+"\nExpecting "+E.join(", ")+", got '"+(this.terminals_[d]||d)+"'":"Parse error on line "+(s+1)+": Unexpected "+(1==d?"end of input":"'"+(this.terminals_[d]||d)+"'"),this.parseError(v,{text:m.match,token:this.terminals_[d]||d,line:m.yylineno,loc:p,expected:E})}if(k[0]instanceof Array&&k.length>1)throw new Error("Parse Error: multiple actions possible at state: "+f+", token: "+d);switch(k[0]){case 1:c.push(d),a.push(m.yytext),r.push(m.yylloc),c.push(k[1]),d=null,l=m.yyleng,o=m.yytext,s=m.yylineno,p=m.yylloc;break;case 2:if(w=this.productions_[k[1]][1],L.$=a[a.length-w],L._$={first_line:r[r.length-(w||1)].first_line,last_line:r[r.length-1].last_line,first_column:r[r.length-(w||1)].first_column,last_column:r[r.length-1].last_column},b&&(L._$.range=[r[r.length-(w||1)].range[0],r[r.length-1].range[1]]),"undefined"!==typeof(x=this.performAction.apply(L,[o,l,s,u.yy,k[1],a,r].concat(h))))return x;w&&(c=c.slice(0,-1*w*2),a=a.slice(0,-1*w),r=r.slice(0,-1*w)),c.push(this.productions_[k[1]][0]),a.push(L.$),r.push(L._$),T=i[c[c.length-2]][c[c.length-1]],c.push(T);break;case 3:return!0}}return!0}},k={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,c=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var n=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var a=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===n.length?this.yylloc.first_column:0)+n[n.length-c.length].length-c[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[a[0],a[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},test_match:function(t,e){var c,n,a;if(this.options.backtrack_lexer&&(a={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(a.yylloc.range=this.yylloc.range.slice(0))),(n=t[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=n.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:n?n[n.length-1].length-n[n.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],c=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),c)return c;if(this._backtrack){for(var r in a)this[r]=a[r];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,c,n;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var a=this._currentRules(),r=0;r<a.length;r++)if((c=this._input.match(this.rules[a[r]]))&&(!e||c[0].length>e[0].length)){if(e=c,n=r,this.options.backtrack_lexer){if(!1!==(t=this.test_match(c,a[r])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,a[n]))&&t:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:"INITIAL"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(t,e,c,n){switch(c){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:case 30:case 34:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:case 9:break;case 10:return 5;case 11:return 40;case 12:return 32;case 13:return 38;case 14:return 42;case 15:return 43;case 16:return 44;case 17:return 45;case 18:return 35;case 19:return 28;case 20:return 29;case 21:return 37;case 22:return 31;case 23:return 34;case 24:return 26;case 25:case 26:return 9;case 27:return 8;case 28:return"CARET";case 29:this.begin("options");break;case 31:return 12;case 32:return 36;case 33:this.begin("string");break;case 35:return 33;case 36:return 30;case 37:return 46;case 38:return 7}},rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[30,31],inclusive:!1},string:{rules:[34,35],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,36,37,38,39],inclusive:!0}}};function x(){this.yy={}}return f.lexer=k,x.prototype=f,f.Parser=x,new x}());r.parser=r;const i=r;let o=(0,n.c)().gitGraph.mainBranchName,s=(0,n.c)().gitGraph.mainBranchOrder,l={},h=null,m={};m[o]={name:o,order:s};let u={};u[o]=h;let y=o,p="LR",b=0;function g(){return(0,n.x)({length:7})}let d={};const f=function(t){if(t=n.e.sanitizeText(t,(0,n.c)()),void 0===u[t]){let e=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+t+'")');throw e.hash={text:"checkout "+t,token:"checkout "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+t+'"']},e}{y=t;const e=u[y];h=l[e]}};function k(t,e,c){const n=t.indexOf(e);-1===n?t.push(c):t.splice(n,1,c)}function x(t){const e=t.reduce(((t,e)=>t.seq>e.seq?t:e),t[0]);let c="";t.forEach((function(t){c+=t===e?"\t*":"\t|"}));const a=[c,e.id,e.seq];for(let n in u)u[n]===e.id&&a.push(n);if(n.l.debug(a.join(" ")),e.parents&&2==e.parents.length){const c=l[e.parents[0]];k(t,e,c),t.push(l[e.parents[1]])}else{if(0==e.parents.length)return;{const c=l[e.parents];k(t,e,c)}}x(t=function(t,e){const c=Object.create(null);return t.reduce(((t,n)=>{const a=e(n);return c[a]||(c[a]=!0,t.push(n)),t}),[])}(t,(t=>t.id)))}const _=function(){const t=Object.keys(l).map((function(t){return l[t]}));return t.forEach((function(t){n.l.debug(t.id)})),t.sort(((t,e)=>t.seq-e.seq)),t},w={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},T={getConfig:()=>(0,n.c)().gitGraph,setDirection:function(t){p=t},setOptions:function(t){n.l.debug("options str",t),t=(t=t&&t.trim())||"{}";try{d=JSON.parse(t)}catch(e){n.l.error("error while parsing gitGraph options",e.message)}},getOptions:function(){return d},commit:function(t,e,c,a){n.l.debug("Entering commit:",t,e,c,a),e=n.e.sanitizeText(e,(0,n.c)()),t=n.e.sanitizeText(t,(0,n.c)()),a=n.e.sanitizeText(a,(0,n.c)());const r={id:e||b+"-"+g(),message:t,seq:b++,type:c||w.NORMAL,tag:a||"",parents:null==h?[]:[h.id],branch:y};h=r,l[r.id]=r,u[y]=r.id,n.l.debug("in pushCommit "+r.id)},branch:function(t,e){if(t=n.e.sanitizeText(t,(0,n.c)()),void 0!==u[t]){let e=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+t+'")');throw e.hash={text:"branch "+t,token:"branch "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+t+'"']},e}u[t]=null!=h?h.id:null,m[t]={name:t,order:e?parseInt(e,10):null},f(t),n.l.debug("in createBranch")},merge:function(t,e,c,a){t=n.e.sanitizeText(t,(0,n.c)()),e=n.e.sanitizeText(e,(0,n.c)());const r=l[u[y]],i=l[u[t]];if(y===t){let e=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(void 0===r||!r){let e=new Error('Incorrect usage of "merge". Current branch ('+y+")has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},e}if(void 0===u[t]){let e=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") does not exist");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+t]},e}if(void 0===i||!i){let e=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},e}if(r===i){let e=new Error('Incorrect usage of "merge". Both branches have same head');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(e&&void 0!==l[e]){let n=new Error('Incorrect usage of "merge". Commit with id:'+e+" already exists, use different custom Id");throw n.hash={text:"merge "+t+e+c+a,token:"merge "+t+e+c+a,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+t+" "+e+"_UNIQUE "+c+" "+a]},n}const o={id:e||b+"-"+g(),message:"merged branch "+t+" into "+y,seq:b++,parents:[null==h?null:h.id,u[t]],branch:y,type:w.MERGE,customType:c,customId:!!e,tag:a||""};h=o,l[o.id]=o,u[y]=o.id,n.l.debug(u),n.l.debug("in mergeBranch")},cherryPick:function(t,e,c,a){if(n.l.debug("Entering cherryPick:",t,e,c),t=n.e.sanitizeText(t,(0,n.c)()),e=n.e.sanitizeText(e,(0,n.c)()),c=n.e.sanitizeText(c,(0,n.c)()),a=n.e.sanitizeText(a,(0,n.c)()),!t||void 0===l[t]){let c=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}let r=l[t],i=r.branch;if(a&&(!Array.isArray(r.parents)||!r.parents.includes(a))){throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.")}if(r.type===w.MERGE&&!a){throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.")}if(!e||void 0===l[e]){var o;if(i===y){let c=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}const s=l[u[y]];if(void 0===s||!s){let c=new Error('Incorrect usage of "cherry-pick". Current branch ('+y+")has no commits");throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}const m={id:b+"-"+g(),message:"cherry-picked "+r+" into "+y,seq:b++,parents:[null==h?null:h.id,r.id],branch:y,type:w.CHERRY_PICK,tag:null!==(o=c)&&void 0!==o?o:"cherry-pick:".concat(r.id).concat(r.type===w.MERGE?"|parent:".concat(a):"")};h=m,l[m.id]=m,u[y]=m.id,n.l.debug(u),n.l.debug("in cherryPick")}},checkout:f,prettyPrint:function(){n.l.debug(l);x([_()[0]])},clear:function(){l={},h=null;let t=(0,n.c)().gitGraph.mainBranchName,e=(0,n.c)().gitGraph.mainBranchOrder;u={},u[t]=null,m={},m[t]={name:t,order:e},y=t,b=0,(0,n.t)()},getBranchesAsObjArray:function(){return Object.values(m).map(((t,e)=>null!==t.order?t:{...t,order:parseFloat("0.".concat(e),10)})).sort(((t,e)=>t.order-e.order)).map((t=>{let{name:e}=t;return{name:e}}))},getBranches:function(){return u},getCommits:function(){return l},getCommitsArray:_,getCurrentBranch:function(){return y},getDirection:function(){return p},getHead:function(){return h},setAccTitle:n.s,getAccTitle:n.g,getAccDescription:n.a,setAccDescription:n.b,setDiagramTitle:n.q,getDiagramTitle:n.r,commitType:w};let E={};const L=0,v=1,M=2,A=3,I=4;let R={},O={},C=[],S=0,P="LR";const B=t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","text");let c=[];c="string"===typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(t)?t:[];for(const n of c){const t=document.createElementNS("http://www.w3.org/2000/svg","tspan");t.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.setAttribute("dy","1em"),t.setAttribute("x","0"),t.setAttribute("class","row"),t.textContent=n.trim(),e.appendChild(t)}return e},N=(t,e,c)=>{const a=(0,n.c)().gitGraph,r=t.append("g").attr("class","commit-bullets"),i=t.append("g").attr("class","commit-labels");let o=0;"TB"===P&&(o=30);const s=Object.keys(e).sort(((t,c)=>e[t].seq-e[c].seq)),l=a.parallelCommits,h=10;s.forEach((t=>{const n=e[t];if(l)if(n.parents.length){const t=(t=>{let e="",c=0;return t.forEach((t=>{const n="TB"===P?O[t].y:O[t].x;n>=c&&(e=t,c=n)})),e||void 0})(n.parents);o="TB"===P?O[t].y+40:O[t].x+40}else o=0,"TB"===P&&(o=30);const s=o+h,m="TB"===P?s:R[n.branch].pos,u="TB"===P?R[n.branch].pos:s;if(c){let t,e=void 0!==n.customType&&""!==n.customType?n.customType:n.type;switch(e){case L:t="commit-normal";break;case v:t="commit-reverse";break;case M:t="commit-highlight";break;case A:t="commit-merge";break;case I:t="commit-cherry-pick";break;default:t="commit-normal"}if(e===M){const e=r.append("rect");e.attr("x",u-10),e.attr("y",m-10),e.attr("height",20),e.attr("width",20),e.attr("class","commit ".concat(n.id," commit-highlight").concat(R[n.branch].index%8," ").concat(t,"-outer")),r.append("rect").attr("x",u-6).attr("y",m-6).attr("height",12).attr("width",12).attr("class","commit ".concat(n.id," commit").concat(R[n.branch].index%8," ").concat(t,"-inner"))}else if(e===I)r.append("circle").attr("cx",u).attr("cy",m).attr("r",10).attr("class","commit ".concat(n.id," ").concat(t)),r.append("circle").attr("cx",u-3).attr("cy",m+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(n.id," ").concat(t)),r.append("circle").attr("cx",u+3).attr("cy",m+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(n.id," ").concat(t)),r.append("line").attr("x1",u+3).attr("y1",m+1).attr("x2",u).attr("y2",m-5).attr("stroke","#fff").attr("class","commit ".concat(n.id," ").concat(t)),r.append("line").attr("x1",u-3).attr("y1",m+1).attr("x2",u).attr("y2",m-5).attr("stroke","#fff").attr("class","commit ".concat(n.id," ").concat(t));else{const c=r.append("circle");if(c.attr("cx",u),c.attr("cy",m),c.attr("r",n.type===A?9:10),c.attr("class","commit ".concat(n.id," commit").concat(R[n.branch].index%8)),e===A){const e=r.append("circle");e.attr("cx",u),e.attr("cy",m),e.attr("r",6),e.attr("class","commit ".concat(t," ").concat(n.id," commit").concat(R[n.branch].index%8))}if(e===v){r.append("path").attr("d","M ".concat(u-5,",").concat(m-5,"L").concat(u+5,",").concat(m+5,"M").concat(u-5,",").concat(m+5,"L").concat(u+5,",").concat(m-5)).attr("class","commit ".concat(t," ").concat(n.id," commit").concat(R[n.branch].index%8))}}}if(O[n.id]="TB"===P?{x:u,y:s}:{x:s,y:m},c){const t=4,e=2;if(n.type!==I&&(n.customId&&n.type===A||n.type!==A)&&a.showCommitLabel){const c=i.append("g"),r=c.insert("rect").attr("class","commit-label-bkg"),l=c.append("text").attr("x",o).attr("y",m+25).attr("class","commit-label").text(n.id);let h=l.node().getBBox();if(r.attr("x",s-h.width/2-e).attr("y",m+13.5).attr("width",h.width+2*e).attr("height",h.height+2*e),"TB"===P&&(r.attr("x",u-(h.width+4*t+5)).attr("y",m-12),l.attr("x",u-(h.width+4*t)).attr("y",m+h.height-12)),"TB"!==P&&l.attr("x",s-h.width/2),a.rotateCommitLabel)if("TB"===P)l.attr("transform","rotate(-45, "+u+", "+m+")"),r.attr("transform","rotate(-45, "+u+", "+m+")");else{let t=-7.5-(h.width+10)/25*9.5,e=10+h.width/25*8.5;c.attr("transform","translate("+t+", "+e+") rotate(-45, "+o+", "+m+")")}}if(n.tag){const c=i.insert("polygon"),a=i.append("circle"),r=i.append("text").attr("y",m-16).attr("class","tag-label").text(n.tag);let l=r.node().getBBox();r.attr("x",s-l.width/2);const y=l.height/2,p=m-19.2;c.attr("class","tag-label-bkg").attr("points","\n          ".concat(o-l.width/2-t/2,",").concat(p+e,"\n          ").concat(o-l.width/2-t/2,",").concat(p-e,"\n          ").concat(s-l.width/2-t,",").concat(p-y-e,"\n          ").concat(s+l.width/2+t,",").concat(p-y-e,"\n          ").concat(s+l.width/2+t,",").concat(p+y+e,"\n          ").concat(s-l.width/2-t,",").concat(p+y+e)),a.attr("cx",o-l.width/2+t/2).attr("cy",p).attr("r",1.5).attr("class","tag-hole"),"TB"===P&&(c.attr("class","tag-label-bkg").attr("points","\n            ".concat(u,",").concat(o+e,"\n            ").concat(u,",").concat(o-e,"\n            ").concat(u+h,",").concat(o-y-e,"\n            ").concat(u+h+l.width+t,",").concat(o-y-e,"\n            ").concat(u+h+l.width+t,",").concat(o+y+e,"\n            ").concat(u+h,",").concat(o+y+e)).attr("transform","translate(12,12) rotate(45, "+u+","+o+")"),a.attr("cx",u+t/2).attr("cy",o).attr("transform","translate(12,12) rotate(45, "+u+","+o+")"),r.attr("x",u+5).attr("y",o+3).attr("transform","translate(14,14) rotate(45, "+u+","+o+")"))}}o+=50,o>S&&(S=o)}))},G=(t,e,c,n,a)=>{const r=("TB"===P?c.x<n.x:c.y<n.y)?e.branch:t.branch;return Object.values(a).some((c=>{return(n=c).seq>t.seq&&n.seq<e.seq&&(t=>t.branch===r)(c);var n}))},$=function(t,e){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const n=t+Math.abs(t-e)/2;if(c>5)return n;if(C.every((t=>Math.abs(t-n)>=10)))return C.push(n),n;const a=Math.abs(t-e);return $(t,e-a/5,c+1)},H=(t,e)=>{const c=t.append("g").attr("class","commit-arrows");Object.keys(e).forEach((t=>{const n=e[t];n.parents&&n.parents.length>0&&n.parents.forEach((t=>{((t,e,c,n)=>{const a=O[e.id],r=O[c.id],i=G(e,c,a,r,n);let o,s="",l="",h=0,m=0,u=R[c.branch].index;if(i){s="A 10 10, 0, 0, 0,",l="A 10 10, 0, 0, 1,",h=10,m=10;const t=a.y<r.y?$(a.y,r.y):$(r.y,a.y),n=a.x<r.x?$(a.x,r.x):$(r.x,a.x);"TB"===P?a.x<r.x?(u=R[c.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(n-h," ").concat(a.y," ").concat(l," ").concat(n," ").concat(a.y+m," L ").concat(n," ").concat(r.y-h," ").concat(s," ").concat(n+m," ").concat(r.y," L ").concat(r.x," ").concat(r.y)):(u=R[e.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(n+h," ").concat(a.y," ").concat(s," ").concat(n," ").concat(a.y+m," L ").concat(n," ").concat(r.y-h," ").concat(l," ").concat(n-m," ").concat(r.y," L ").concat(r.x," ").concat(r.y)):a.y<r.y?(u=R[c.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(a.x," ").concat(t-h," ").concat(s," ").concat(a.x+m," ").concat(t," L ").concat(r.x-h," ").concat(t," ").concat(l," ").concat(r.x," ").concat(t+m," L ").concat(r.x," ").concat(r.y)):(u=R[e.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(a.x," ").concat(t+h," ").concat(l," ").concat(a.x+m," ").concat(t," L ").concat(r.x-h," ").concat(t," ").concat(s," ").concat(r.x," ").concat(t-m," L ").concat(r.x," ").concat(r.y))}else"TB"===P?(a.x<r.x&&(s="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,u=R[c.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(r.x-h," ").concat(a.y," ").concat(l," ").concat(r.x," ").concat(a.y+m," L ").concat(r.x," ").concat(r.y)),a.x>r.x&&(s="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,u=R[e.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(a.x," ").concat(r.y-h," ").concat(l," ").concat(a.x-m," ").concat(r.y," L ").concat(r.x," ").concat(r.y)),a.x===r.x&&(u=R[e.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(a.x+h," ").concat(a.y," ").concat(s," ").concat(a.x+m," ").concat(r.y+h," L ").concat(r.x," ").concat(r.y))):(a.y<r.y&&(s="A 20 20, 0, 0, 0,",h=20,m=20,u=R[c.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(a.x," ").concat(r.y-h," ").concat(s," ").concat(a.x+m," ").concat(r.y," L ").concat(r.x," ").concat(r.y)),a.y>r.y&&(s="A 20 20, 0, 0, 0,",h=20,m=20,u=R[e.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(r.x-h," ").concat(a.y," ").concat(s," ").concat(r.x," ").concat(a.y-m," L ").concat(r.x," ").concat(r.y)),a.y===r.y&&(u=R[e.branch].index,o="M ".concat(a.x," ").concat(a.y," L ").concat(a.x," ").concat(r.y-h," ").concat(s," ").concat(a.x+m," ").concat(r.y," L ").concat(r.x," ").concat(r.y)));t.append("path").attr("d",o).attr("class","arrow arrow"+u%8)})(c,e[t],n,e)}))}))},z={parser:i,db:T,renderer:{draw:function(t,e,c,r){var i;R={},O={},E={},S=0,C=[],P="LR";const o=(0,n.c)(),s=o.gitGraph;n.l.debug("in gitgraph renderer",t+"\n","id:",e,c),E=r.db.getCommits();const l=r.db.getBranchesAsObjArray();P=r.db.getDirection();const h=(0,a.Ltv)('[id="'.concat(e,'"]'));let m=0;l.forEach(((t,e)=>{const c=B(t.name),n=h.append("g"),a=n.insert("g").attr("class","branchLabel"),r=a.insert("g").attr("class","label branch-label");r.node().appendChild(c);let i=c.getBBox();R[t.name]={pos:m,index:e},m+=50+(s.rotateCommitLabel?40:0)+("TB"===P?i.width/2:0),r.remove(),a.remove(),n.remove()})),N(h,E,!1),s.showBranches&&((t,e)=>{const c=(0,n.c)().gitGraph,a=t.append("g");e.forEach(((t,e)=>{const n=e%8,r=R[t.name].pos,i=a.append("line");i.attr("x1",0),i.attr("y1",r),i.attr("x2",S),i.attr("y2",r),i.attr("class","branch branch"+n),"TB"===P&&(i.attr("y1",30),i.attr("x1",r),i.attr("y2",S),i.attr("x2",r)),C.push(r);let o=t.name;const s=B(o),l=a.insert("rect"),h=a.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+n);h.node().appendChild(s);let m=s.getBBox();l.attr("class","branchLabelBkg label"+n).attr("rx",4).attr("ry",4).attr("x",-m.width-4-(!0===c.rotateCommitLabel?30:0)).attr("y",-m.height/2+8).attr("width",m.width+18).attr("height",m.height+4),h.attr("transform","translate("+(-m.width-14-(!0===c.rotateCommitLabel?30:0))+", "+(r-m.height/2-1)+")"),"TB"===P&&(l.attr("x",r-m.width/2-10).attr("y",0),h.attr("transform","translate("+(r-m.width/2-5)+", 0)")),"TB"!==P&&l.attr("transform","translate(-19, "+(r-m.height/2)+")")}))})(h,l),H(h,E),N(h,E,!0),n.u.insertTitle(h,"gitTitleText",s.titleTopMargin,r.db.getDiagramTitle()),(0,n.y)(void 0,h,s.diagramPadding,null!==(i=s.useMaxWidth)&&void 0!==i?i:o.useMaxWidth)}},styles:t=>"\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ".concat([0,1,2,3,4,5,6,7].map((e=>"\n        .branch-label".concat(e," { fill: ").concat(t["gitBranchLabel"+e],"; }\n        .commit").concat(e," { stroke: ").concat(t["git"+e],"; fill: ").concat(t["git"+e],"; }\n        .commit-highlight").concat(e," { stroke: ").concat(t["gitInv"+e],"; fill: ").concat(t["gitInv"+e],"; }\n        .label").concat(e,"  { fill: ").concat(t["git"+e],"; }\n        .arrow").concat(e," { stroke: ").concat(t["git"+e],"; }\n        "))).join("\n"),"\n\n  .branch {\n    stroke-width: 1;\n    stroke: ").concat(t.lineColor,";\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelColor,";}\n  .commit-label-bkg { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelBackground,"; opacity: 0.5; }\n  .tag-label { font-size: ").concat(t.tagLabelFontSize,"; fill: ").concat(t.tagLabelColor,";}\n  .tag-label-bkg { fill: ").concat(t.tagLabelBackground,"; stroke: ").concat(t.tagLabelBorder,"; }\n  .tag-hole { fill: ").concat(t.textColor,"; }\n\n  .commit-merge {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n  .commit-reverse {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ").concat(t.textColor,";\n  }\n")}}}]);
//# sourceMappingURL=504.61149afc.chunk.js.map